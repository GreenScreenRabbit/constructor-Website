{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\cartCompanyEmployees\\\\CartCompanyEmployees.tsx\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../actions and const/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nconst images = importAll(require.context('../picturesForCompanyEmployees/', false, /\\.(png|jpe?g|svg)$/)); // state.info.map(info => Object.assign({}, info,  action.pictures.find((pictureWithId:any) => {\n//     if(info.id == pictureWithId.id){ return pictureWithId.image }\n// })) )\n\nlet takeResponseAboutInformationEmployees = (informationEmployees, images) => {\n  let addIdForImages = images => {\n    let id = 0;\n    let imagesWithId = [];\n    images.map(image => {\n      id = 1 + id;\n      image = image.default;\n      let picture = {\n        image,\n        id\n      };\n      imagesWithId.push(picture);\n    });\n    return imagesWithId;\n  };\n\n  let informationEmployeesWutchImages = informationEmployees.map(info => Object.assign({}, info, addIdForImages(images).find(pictureWithId => {\n    if (info.id == pictureWithId.id) {\n      return pictureWithId.image;\n    }\n  })));\n  return informationEmployeesWutchImages;\n};\n\nclass CartCompanyEmployees extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.CompanyEmployeesShowcaseChangePosition = isAddOne => {\n      if (isAddOne == true) {\n        this.props.setCartCompanyEmployeesPosition(this.props.cartCompanyEmployeesPosition.map(position => {\n          if (position == this.props.companyEmployees.length - 1) {\n            return 0;\n          } else {\n            return position += +1;\n          }\n        }));\n      } else {\n        this.props.setCartCompanyEmployeesPosition(this.props.cartCompanyEmployeesPosition.map(position => {\n          if (position == 0) {\n            return this.props.companyEmployees.length - 1;\n          } else {\n            return position += -1;\n          }\n        }));\n      }\n    };\n  }\n\n  async componentDidMount() {\n    axios.get('https://my-json-server.typicode.com/GreenScreenRabbit/constructor-comp-server/informationEmployees').then(response => this.props.setPicturesCompanyEmployees(takeResponseAboutInformationEmployees(response.data, images))).then(response => this.props.setCartCompanyEmployeesPosition([0, 1, 2]));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartCompanyEmployees-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cartCompanyEmployees-positionForCart\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cartCompanyEmployees-containerForButton\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cartCompanyEmployees-buttonNext\",\n                onClick: () => this.CompanyEmployeesShowcaseChangePosition(true),\n                children: \"buttonNext\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cartCompanyEmployees-buttonPrev\",\n                onClick: () => this.CompanyEmployeesShowcaseChangePosition(false),\n                children: \"buttonPrev\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cartCompanyEmployees-contaiterForCart\",\n              children: this.props.cartCompanyEmployeesPosition.map(position => {\n                let employees = this.props.companyEmployees[position];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cartCompanyEmployees-showcaseCatr\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cartCompanyEmployees-showcaseCatr-circleForImg\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: employees.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cartCompanyEmployees-showcaseCatr-name\",\n                    children: employees.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cartCompanyEmployees-showcaseCatr-information\",\n                    children: employees.information\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  cartCompanyEmployeesPosition: state.cartCompanyEmployees.cartCompanyEmployeesPosition,\n  companyEmployees: state.cartCompanyEmployees.companyEmployees\n});\n\nexport default connect(mapStateToProps, {\n  setPicturesCompanyEmployees: actions.setPicturesCompanyEmployees,\n  setCartCompanyEmployeesPosition: actions.setCartCompanyEmployeesPosition,\n  setInformationEmployees: actions.setInformationEmployees\n})(CartCompanyEmployees);","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/cartCompanyEmployees/CartCompanyEmployees.tsx"],"names":["axios","Component","Row","Col","connect","actions","importAll","r","keys","map","images","require","context","takeResponseAboutInformationEmployees","informationEmployees","addIdForImages","id","imagesWithId","image","default","picture","push","informationEmployeesWutchImages","info","Object","assign","find","pictureWithId","CartCompanyEmployees","CompanyEmployeesShowcaseChangePosition","isAddOne","props","setCartCompanyEmployeesPosition","cartCompanyEmployeesPosition","position","companyEmployees","length","componentDidMount","get","then","response","setPicturesCompanyEmployees","data","render","offset","span","employees","name","information","mapStateToProps","state","cartCompanyEmployees","setInformationEmployees"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,OAAT,QAAwB,8BAAxB;;;AAKA,SAASC,SAAT,CAAmBC,CAAnB,EAA0B;AACtB,SAAOA,CAAC,CAACC,IAAF,GAASC,GAAT,CAAaF,CAAb,CAAP;AACH;;AAED,MAAMG,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACC,OAAR,CAAgB,iCAAhB,EAAmD,KAAnD,EAA0D,oBAA1D,CAAD,CAAxB,C,CAQA;AACA;AAEA;;AAOA,IAAIC,qCAAqC,GAAG,CAACC,oBAAD,EAA0BJ,MAA1B,KAAyC;AAEjF,MAAIK,cAAc,GAAIL,MAAD,IAAgB;AAEjC,QAAIM,EAAE,GAAG,CAAT;AACA,QAAIC,YAAgB,GAAG,EAAvB;AAEAP,IAAAA,MAAM,CAACD,GAAP,CAAYS,KAAD,IAAe;AAE1BF,MAAAA,EAAE,GAAG,IAAIA,EAAT;AAEAE,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AAEA,UAAIC,OAAO,GAAG;AACVF,QAAAA,KADU;AAEVF,QAAAA;AAFU,OAAd;AAIAC,MAAAA,YAAY,CAACI,IAAb,CAAkBD,OAAlB;AACC,KAXD;AAeA,WAAOH,YAAP;AACH,GArBD;;AA2BA,MAAIK,+BAA+B,GAAGR,oBAAoB,CAACL,GAArB,CAA0Bc,IAAD,IAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAyBR,cAAc,CAACL,MAAD,CAAd,CAAuBgB,IAAvB,CAA6BC,aAAD,IAAuB;AACrJ,QAAGJ,IAAI,CAACP,EAAL,IAAWW,aAAa,CAACX,EAA5B,EAA+B;AAAE,aAAOW,aAAa,CAACT,KAArB;AAA4B;AAEhE,GAHqG,CAAzB,CAAvC,CAAtC;AAKA,SAAOI,+BAAP;AAKH,CAvCD;;AAqDA,MAAMM,oBAAN,SAAmC3B,SAAnC,CAAiD;AAAA;AAAA;;AAAA,SAa7C4B,sCAb6C,GAaHC,QAAD,IAAsB;AAC3D,UAAGA,QAAQ,IAAI,IAAf,EAAoB;AAEhB,aAAKC,KAAL,CAAWC,+BAAX,CAA2C,KAAKD,KAAL,CAAWE,4BAAX,CAAwCxB,GAAxC,CAA6CyB,QAAD,IAAqB;AACxG,cAAGA,QAAQ,IAAI,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,MAA5B,GAAqC,CAApD,EAAuD;AACnD,mBAAO,CAAP;AACH,WAFD,MAEK;AACD,mBAAOF,QAAQ,IAAI,CAAE,CAArB;AACH;AAGJ,SAR0C,CAA3C;AAUH,OAZD,MAYK;AACD,aAAKH,KAAL,CAAWC,+BAAX,CAA2C,KAAKD,KAAL,CAAWE,4BAAX,CAAwCxB,GAAxC,CAA6CyB,QAAD,IAAqB;AACxG,cAAGA,QAAQ,IAAI,CAAf,EAAiB;AAEb,mBAAO,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,MAA5B,GAAqC,CAA5C;AACH,WAHD,MAGK;AACD,mBAAOF,QAAQ,IAAI,CAAE,CAArB;AACH;AAGJ,SAT0C,CAA3C;AAUH;AACJ,KAtC4C;AAAA;;AAGxB,QAAjBG,iBAAiB,GAAG;AACxBrC,IAAAA,KAAK,CAACsC,GAAN,CAAU,oGAAV,EACCC,IADD,CACMC,QAAQ,IAAI,KAAKT,KAAL,CAAWU,2BAAX,CAAuC5B,qCAAqC,CAAC2B,QAAQ,CAACE,IAAV,EAAgBhC,MAAhB,CAA5E,CADlB,EAEC6B,IAFD,CAEMC,QAAQ,IAAI,KAAKT,KAAL,CAAWC,+BAAX,CAA2C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAA3C,CAFlB;AAGC;;AAwCDW,EAAAA,MAAM,GAAE;AACJ,wBAEA,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAAT;AAAA,+BAII;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCAEI;AAAK,YAAA,SAAS,EAAC,sCAAf;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,yCAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,iCAAf;AACA,gBAAA,OAAO,EAAE,MAAM,KAAKhB,sCAAL,CAA4C,IAA5C,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,iCAAf;AACA,gBAAA,OAAO,EAAE,MAAM,KAAKA,sCAAL,CAA4C,KAA5C,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAgBI;AAAK,cAAA,SAAS,EAAC,uCAAf;AAAA,wBAEK,KAAKE,KAAL,CAAWE,4BAAX,CAAwCxB,GAAxC,CAA6CyB,QAAD,IAAqB;AAElE,oBAAIY,SAAS,GAAG,KAAKf,KAAL,CAAWI,gBAAX,CAA4BD,QAA5B,CAAhB;AAEA,oCACA;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA,0CAKI;AAAK,oBAAA,SAAS,EAAC,gDAAf;AAAA,2CAEA;AAAK,sBAAA,GAAG,EAAEY,SAAS,CAAC5B;AAApB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAUI;AAAK,oBAAA,SAAS,EAAC,wCAAf;AAAA,8BAAyD4B,SAAS,CAACC;AAAnE;AAAA;AAAA;AAAA;AAAA,0BAVJ,eAaI;AAAK,oBAAA,SAAS,EAAC,+CAAf;AAAA,8BAGKD,SAAS,CAACE;AAHf;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA;AA0BK,eA9BJ;AAFL;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAmEF;;AAnH2C;;AAsHjD,IAAIC,eAAe,GAAIC,KAAD,KAA4B;AAC9CjB,EAAAA,4BAA4B,EAAEiB,KAAK,CAACC,oBAAN,CAA2BlB,4BADX;AAE9CE,EAAAA,gBAAgB,EAAGe,KAAK,CAACC,oBAAN,CAA2BhB;AAFA,CAA5B,CAAtB;;AAOA,eAAe/B,OAAO,CAAC6C,eAAD,EAAkB;AAACR,EAAAA,2BAA2B,EAAEpC,OAAO,CAACoC,2BAAtC;AAAmET,EAAAA,+BAA+B,EAAC3B,OAAO,CAAC2B,+BAA3G;AACpCoB,EAAAA,uBAAuB,EAAE/C,OAAO,CAAC+C;AADG,CAAlB,CAAP,CAIZxB,oBAJY,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { connect, RootStateOrAny } from \"react-redux\"\r\nimport { actions } from \"../actions and const/actions\";\r\n\r\n\r\n\r\n\r\nfunction importAll(r:any) {\r\n    return r.keys().map(r);\r\n}\r\n  \r\nconst images = importAll(require.context('../picturesForCompanyEmployees/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// state.info.map(info => Object.assign({}, info,  action.pictures.find((pictureWithId:any) => {\r\n//     if(info.id == pictureWithId.id){ return pictureWithId.image }\r\n\r\n// })) )\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet takeResponseAboutInformationEmployees = (informationEmployees:any,images:any) => {\r\n\r\n    let addIdForImages = (images:any) => {\r\n\r\n        let id = 0\r\n        let imagesWithId:any = [];\r\n    \r\n        images.map((image: any) =>{\r\n        \r\n        id = 1 + id;    \r\n    \r\n        image = image.default\r\n    \r\n        let picture = {\r\n            image,\r\n            id\r\n        }\r\n        imagesWithId.push(picture)\r\n        }\r\n    \r\n        )\r\n    \r\n        return imagesWithId\r\n    }\r\n    \r\n\r\n\r\n        \r\n\r\n    let informationEmployeesWutchImages = informationEmployees.map((info:any) => Object.assign({}, info,  addIdForImages(images).find((pictureWithId:any) => {\r\n        if(info.id == pictureWithId.id){ return pictureWithId.image }\r\n    \r\n    })) )\r\n\r\n    return informationEmployeesWutchImages\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nclass CartCompanyEmployees extends Component<any>{\r\n    \r\n\r\n  async componentDidMount() {\r\n    axios.get('https://my-json-server.typicode.com/GreenScreenRabbit/constructor-comp-server/informationEmployees')\r\n    .then(response => this.props.setPicturesCompanyEmployees(takeResponseAboutInformationEmployees(response.data, images)))\r\n    .then(response => this.props.setCartCompanyEmployeesPosition([0,1,2]))\r\n    }\r\n\r\n    \r\n        \r\n \r\n   \r\n    CompanyEmployeesShowcaseChangePosition = (isAddOne:boolean) => {\r\n        if(isAddOne == true){\r\n\r\n            this.props.setCartCompanyEmployeesPosition(this.props.cartCompanyEmployeesPosition.map((position:number) => {\r\n                if(position == this.props.companyEmployees.length - 1 ){\r\n                    return 0\r\n                }else{\r\n                    return position += + 1\r\n                }\r\n                \r\n                \r\n            }))\r\n  \r\n        }else{\r\n            this.props.setCartCompanyEmployeesPosition(this.props.cartCompanyEmployeesPosition.map((position:number) => {\r\n                if(position == 0){\r\n\r\n                    return this.props.companyEmployees.length - 1 \r\n                }else{\r\n                    return position += - 1\r\n                }\r\n                \r\n                \r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    render(){\r\n        return (\r\n\r\n        <Row>\r\n            <Col lg={{ offset: 1, span: 10 }}>\r\n\r\n            \r\n\r\n                <div className=\"cartCompanyEmployees-body\">\r\n\r\n                    <div className=\"cartCompanyEmployees-positionForCart\">\r\n\r\n                        <div className=\"cartCompanyEmployees-containerForButton\">\r\n                            <div className=\"cartCompanyEmployees-buttonNext\"\r\n                            onClick={() => this.CompanyEmployeesShowcaseChangePosition(true) }\r\n                            >buttonNext</div>\r\n                            <div className=\"cartCompanyEmployees-buttonPrev\"\r\n                            onClick={() => this.CompanyEmployeesShowcaseChangePosition(false) }\r\n                            >buttonPrev</div>\r\n                        </div>\r\n\r\n\r\n                        \r\n                        \r\n\r\n\r\n                        <div className=\"cartCompanyEmployees-contaiterForCart\"> \r\n\r\n                            {this.props.cartCompanyEmployeesPosition.map((position:number) => {\r\n                            \r\n                            let employees = this.props.companyEmployees[position]\r\n\r\n                            return(\r\n                            <div className=\"cartCompanyEmployees-showcaseCatr\">\r\n\r\n\r\n                                \r\n                                \r\n                                <div className=\"cartCompanyEmployees-showcaseCatr-circleForImg\">\r\n                                    \r\n                                <img src={employees.image } />\r\n                                </div>\r\n\r\n                                <div className=\"cartCompanyEmployees-showcaseCatr-name\">{employees.name}</div>\r\n\r\n\r\n                                <div className=\"cartCompanyEmployees-showcaseCatr-information\"> \r\n                                \r\n\r\n                                    {employees.information}\r\n\r\n                                \r\n\r\n                                </div>\r\n\r\n\r\n                            </div>)\r\n\r\n                                })}\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )}\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateOrAny) => ({\r\n    cartCompanyEmployeesPosition: state.cartCompanyEmployees.cartCompanyEmployeesPosition,\r\n    companyEmployees : state.cartCompanyEmployees.companyEmployees\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {setPicturesCompanyEmployees: actions.setPicturesCompanyEmployees, setCartCompanyEmployeesPosition:actions.setCartCompanyEmployeesPosition,\r\n    setInformationEmployees: actions.setInformationEmployees,\r\n\r\n\r\n})(CartCompanyEmployees)"]},"metadata":{},"sourceType":"module"}