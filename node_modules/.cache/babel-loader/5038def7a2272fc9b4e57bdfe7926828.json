{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\apartmentShowcase\\\\apartmentShowcaseMain.tsx\";\nimport axios from 'axios';\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { actions } from '../actions and const/actions';\nimport Showcase from './Showcase';\nimport { asyncActions } from '../actions and const/asyncActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nconst pictures = importAll(require.context(`../picturesForApartments/picturesForApartment1`, false, /\\.(png|jpe?g|svg)$/));\n\nconst f1 = function () {\n  let counter = 0;\n  return function () {\n    return ++counter;\n  };\n}();\n\nf1();\nf1();\nf1();\n\nclass ApartmentShowcase extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.limitOfNumberOfPositionForPictures = apartment => {\n      console.log(apartment);\n      const lengthOfPictures = apartment.rooms[this.props.indexOfSelectedRoom].pictures.length;\n\n      if (lengthOfPictures <= this.props.positionOfPicture) {\n        console.log(\"1\");\n      } else {\n        console.log(\"2\");\n        console.log(lengthOfPictures);\n        console.log();\n      }\n\n      return apartment.rooms[this.props.indexOfSelectedRoom].pictures[this.props.positionOfPicture].picture;\n    };\n\n    this.takeResponseAboutApartments = (apartments, pictures) => {\n      let id = 0;\n\n      let preparationApartmentToExport = pictures => {\n        id++;\n        let filtredApartment = apartments.find(apartment => apartment.id == id);\n        const picturesWithId = [];\n        const namesRoomsArr = [];\n        const rooms = filtredApartment.rooms; //add all roomNames\n\n        rooms.map(room => {\n          namesRoomsArr.push(room.name);\n        });\n        const namesRoomsArrWithRegExp = namesRoomsArr.map(name => new RegExp(`\\d*\\D*${name}`, `gm`)); //add images to id\n\n        pictures.forEach(picture => {\n          picture = picture.default;\n          let pictureWithId = {\n            picture,\n            id\n          };\n          picturesWithId.push(pictureWithId);\n          console.log(picturesWithId);\n        }); //add images to apartment\n\n        rooms.forEach(room => {\n          const addImagesForApartments = room => {\n            let regExpSelectedRoom = namesRoomsArrWithRegExp.find(regExp => {\n              if (!!room.name.match(regExp)) {\n                return regExp;\n              }\n            }); //add Images to ArrayImages\n\n            console.log(picturesWithId);\n            picturesWithId.map(pictureWithId => {\n              if (pictureWithId.picture.match(regExpSelectedRoom) != null) {\n                room.pictures.push(pictureWithId);\n              }\n            });\n          };\n\n          addImagesForApartments(room);\n        });\n      };\n\n      preparationApartmentToExport(pictures);\n      return apartments;\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://my-json-server.typicode.com/GreenScreenRabbit/constructor-comp-server/apartments').then(response => this.props.setApartmentsFromState(this.takeResponseAboutApartments(response.data, pictures)));\n  }\n\n  render() {\n    const renderImages = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apartmentShowcase-overview\",\n        onMouseLeave: () => this.props.setIntervalForPicture(false),\n        children: [this.props.apartments.map((apartment, index) => {\n          if (index == this.props.indexOfSelectedApartment) {\n            if (this.props.indexOfSelectedRoom != null) {\n              //TODO при наведении indexRoom делать 0\n              //TODO  и так надо сделать чтобы он автоматически вычеслял длину картинок выбранной комнаты и в зависимости от нее выбирался index\n              // т.е. чтобы index в стейте positionPucture не привышал длину массива выбранной комнаты \n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: this.limitOfNumberOfPositionForPictures(apartment),\n                className: \"apartmentShowcase-overview-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"apartmentShowcase-overview-image\",\n                children: \"Else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 40\n              }, this);\n            }\n          }\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Showcase, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n    };\n\n    const chengeIndexOfSelectedApartment = addOne => {\n      if (this.props.indexOfSelectedApartment == 0) {\n        this.props.setIndexOfSelectedApartment(this.props.apartments.length - 1);\n      } else if (this.props.indexOfSelectedApartment == this.props.apartments.length - 1) {\n        this.props.setIndexOfSelectedApartment(0);\n      } else if (addOne == true) {\n        this.props.setIndexOfSelectedApartment(this.props.indexOfSelectedApartment + 1);\n      } else if (addOne == false) {\n        this.props.setIndexOfSelectedApartment(this.props.indexOfSelectedApartment - 1);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            span: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apartmentShowcase-frame\",\n            onMouseLeave: () => this.props.setIndexOfSelectedRoom(null),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"apartmentShowcase-upBar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"apartmentShowcase-upBar-button-back\",\n                onClick: () => chengeIndexOfSelectedApartment(false),\n                children: \"BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"apartmentShowcase-upBar-button-next\",\n                onClick: () => chengeIndexOfSelectedApartment(true),\n                children: \"NEXT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), renderImages()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\n  indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\n  showCaseApartment: state.apartmentShowCase.showCaseApartment,\n  apartments: state.apartmentsArray.apartments,\n  isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\n  positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture\n});\n\nexport default connect(mapStateToProps, {\n  setIndexOfSelectedApartment: actions.setIndexOfSelectedApartment,\n  setApartmentsFromState: actions.setApartmentsFromState,\n  setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\n  changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom,\n  setIntervalForPicture: actions.setIntervalForPicture\n})(ApartmentShowcase);","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/apartmentShowcase/apartmentShowcaseMain.tsx"],"names":["axios","React","Row","Col","connect","actions","Showcase","asyncActions","importAll","r","keys","map","pictures","require","context","f1","counter","ApartmentShowcase","Component","limitOfNumberOfPositionForPictures","apartment","console","log","lengthOfPictures","rooms","props","indexOfSelectedRoom","length","positionOfPicture","picture","takeResponseAboutApartments","apartments","id","preparationApartmentToExport","filtredApartment","find","picturesWithId","namesRoomsArr","room","push","name","namesRoomsArrWithRegExp","RegExp","forEach","default","pictureWithId","addImagesForApartments","regExpSelectedRoom","regExp","match","componentDidMount","get","then","response","setApartmentsFromState","data","render","renderImages","setIntervalForPicture","index","indexOfSelectedApartment","chengeIndexOfSelectedApartment","addOne","setIndexOfSelectedApartment","span","offset","setIndexOfSelectedRoom","mapStateToProps","state","apartmentsArray","showcaseStylesAndIndex","showCaseApartment","apartmentShowCase","isIntervalForPictureWorking","changePositionPictureOfRoom"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, useState } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { actions } from '../actions and const/actions';\r\nimport Showcase from './Showcase';\r\nimport img from '../picturesForApartment1/bathroom_1.jpg';\r\nimport { asyncActions } from '../actions and const/asyncActions';\r\n\r\nfunction importAll(r: any) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nconst pictures = importAll(require.context(`../picturesForApartments/picturesForApartment1`, false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst f1 = (function () {\r\n    let counter = 0;\r\n    return function () {\r\n        return ++counter;\r\n    };\r\n})();\r\n\r\nf1();\r\nf1();\r\nf1();\r\n\r\nclass ApartmentShowcase extends React.Component<any, any> {\r\n\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('https://my-json-server.typicode.com/GreenScreenRabbit/constructor-comp-server/apartments')\r\n            .then((response) => this.props.setApartmentsFromState(this.takeResponseAboutApartments(response.data, pictures)));\r\n    }\r\n\r\n\r\n    limitOfNumberOfPositionForPictures = (apartment:any) : any => {\r\n        console.log(apartment);\r\n\r\n        const lengthOfPictures = apartment.rooms[this.props.indexOfSelectedRoom].pictures.length\r\n        \r\n        if(lengthOfPictures <= this.props.positionOfPicture){\r\n            console.log(\"1\");\r\n        }else{\r\n            console.log(\"2\");\r\n            console.log(lengthOfPictures);\r\n            console.log();\r\n            \r\n            \r\n            \r\n        }\r\n            \r\n        \r\n\r\n        return apartment.rooms[this.props.indexOfSelectedRoom].pictures[this.props.positionOfPicture].picture\r\n    }\r\n\r\n\r\n    // TODO надо переписать для всех apartments\r\n    takeResponseAboutApartments = (apartments: any, pictures: any) => {\r\n        let id: number = 0;\r\n\r\n        let preparationApartmentToExport = (pictures: any) => {\r\n            id++;\r\n\r\n            let filtredApartment = apartments.find((apartment: any) => apartment.id == id);\r\n\r\n            const picturesWithId: any[] = [];\r\n            const namesRoomsArr: string[] = [];\r\n            const rooms = filtredApartment.rooms;\r\n\r\n            //add all roomNames\r\n            rooms.map((room: any) => {\r\n                namesRoomsArr.push(room.name);\r\n            });\r\n\r\n            const namesRoomsArrWithRegExp = namesRoomsArr.map((name: string) => new RegExp(`\\d*\\D*${name}`, `gm`));\r\n\r\n            //add images to id\r\n            pictures.forEach((picture: any) => {\r\n                picture = picture.default;\r\n                let pictureWithId = {\r\n                    picture,\r\n                    id,\r\n                };\r\n                picturesWithId.push(pictureWithId);\r\n                console.log(picturesWithId);\r\n            });\r\n\r\n            //add images to apartment\r\n            rooms.forEach((room: any) => {\r\n                const addImagesForApartments = (room: any): void => {\r\n                    let regExpSelectedRoom: any = namesRoomsArrWithRegExp.find((regExp: any) => {\r\n                        if (!!room.name.match(regExp)) {\r\n                            return regExp;\r\n                        }\r\n                    });\r\n\r\n                    //add Images to ArrayImages\r\n                    console.log(picturesWithId);\r\n\r\n                    picturesWithId.map((pictureWithId: any) => {\r\n                        if (pictureWithId.picture.match(regExpSelectedRoom) != null) {\r\n                            room.pictures.push(pictureWithId);\r\n                        }\r\n                    });\r\n                };\r\n                addImagesForApartments(room);\r\n            });\r\n        };\r\n\r\n        preparationApartmentToExport(pictures);\r\n\r\n        return apartments;\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const renderImages = () => {\r\n            return (\r\n                <div className=\"apartmentShowcase-overview\" onMouseLeave={() => this.props.setIntervalForPicture(false)}>\r\n                    {this.props.apartments.map((apartment: any, index: number) => {\r\n                        if (index == this.props.indexOfSelectedApartment) {\r\n                            if (this.props.indexOfSelectedRoom != null) {\r\n                                //TODO при наведении indexRoom делать 0\r\n                                //TODO  и так надо сделать чтобы он автоматически вычеслял длину картинок выбранной комнаты и в зависимости от нее выбирался index\r\n                                // т.е. чтобы index в стейте positionPucture не привышал длину массива выбранной комнаты \r\n                                return (\r\n                                    <img\r\n                                        src={this.limitOfNumberOfPositionForPictures(apartment)}\r\n                                        className=\"apartmentShowcase-overview-image\"\r\n                                    />\r\n                                );\r\n                            } else {\r\n                                return <div className=\"apartmentShowcase-overview-image\">Else</div>;\r\n                            }\r\n                        }\r\n                    })}\r\n\r\n                    <div>\r\n                        <Showcase />\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n\r\n        const chengeIndexOfSelectedApartment = (addOne: boolean) => {\r\n            if (this.props.indexOfSelectedApartment == 0) {\r\n                this.props.setIndexOfSelectedApartment(this.props.apartments.length - 1);\r\n            } else if (this.props.indexOfSelectedApartment == this.props.apartments.length - 1) {\r\n                this.props.setIndexOfSelectedApartment(0);\r\n            } else if (addOne == true) {\r\n                this.props.setIndexOfSelectedApartment(this.props.indexOfSelectedApartment + 1);\r\n            } else if (addOne == false) {\r\n                this.props.setIndexOfSelectedApartment(this.props.indexOfSelectedApartment - 1);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col lg={{ span: 10, offset: 1 }}>\r\n                        <div className=\"apartmentShowcase-frame\" onMouseLeave={() => this.props.setIndexOfSelectedRoom(null)}>\r\n                            <div className=\"apartmentShowcase-upBar\">\r\n                                <div className=\"apartmentShowcase-upBar-button-back\" onClick={() => chengeIndexOfSelectedApartment(false)}>\r\n                                    BACK\r\n                                </div>\r\n\r\n                                <div className=\"apartmentShowcase-upBar-button-next\" onClick={() => chengeIndexOfSelectedApartment(true)}>\r\n                                    NEXT\r\n                                </div>\r\n                            </div>\r\n\r\n                            {renderImages()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateOrAny) => ({\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n    indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\r\n    showCaseApartment: state.apartmentShowCase.showCaseApartment,\r\n    apartments: state.apartmentsArray.apartments,\r\n    isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\r\n    positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setIndexOfSelectedApartment: actions.setIndexOfSelectedApartment,\r\n    setApartmentsFromState: actions.setApartmentsFromState,\r\n    setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\r\n    changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom,\r\n    setIntervalForPicture: actions.setIntervalForPicture,\r\n})(ApartmentShowcase);\r\n"]},"metadata":{},"sourceType":"module"}