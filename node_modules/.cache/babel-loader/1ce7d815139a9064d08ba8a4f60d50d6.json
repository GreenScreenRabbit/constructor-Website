{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { actions } from '../actions and const/actions';\nimport arrowButtonJpg from './Arrow-button.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment];\n  const [positionOfImg, setPositionOfImg] = useState(0);\n  const [recursiveTimeoutId, setRecursiveTimeoutId] = useState();\n  const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState();\n  const [isTimerWork, setTimerWork] = useState(true);\n  let newPosition = positionOfImg;\n  let bool = true;\n  let intId = 0; // useEffect(() => {\n  //     apartment ? timer(apartment) : cheackTimer(apartment, isTimerWork);\n  // }, [apartment]);\n\n  function run() {\n    console.log(bool);\n\n    if (bool == true) {\n      ++newPosition;\n\n      if (apartment.whatsOutside.length - 1 < newPosition) {\n        newPosition = 0;\n        setPositionOfImg(() => 0);\n      } else {\n        setPositionOfImg(() => newPosition);\n      }\n    } else {\n      console.log(\"STOP\");\n      console.log(props.test1);\n      clearInterval(intId);\n      clearTimeout(recursiveTimeoutId);\n    }\n  }\n\n  function timer(apartment) {\n    let timerId = setTimeout(function run() {\n      console.log(isTimerWork);\n      setRecursiveTimeoutId(timerId);\n\n      if (props.test1 == true) {\n        console.log(timerId);\n        ++newPosition;\n\n        if (apartment.whatsOutside.length - 1 < newPosition) {\n          newPosition = 0;\n          setPositionOfImg(() => 0);\n        } else {\n          setPositionOfImg(() => newPosition);\n        }\n\n        timerId = setTimeout(run, 5000);\n      } else {\n        console.log(\"STOP\");\n        console.log(props.test1);\n        clearTimeout(recursiveTimeoutId);\n        clearTimeout(timerId);\n      }\n    }, 5000);\n    console.log(isTimerWork);\n    setRecursiveTimeoutId(timerId);\n  }\n\n  function cheackTimer(apartment, isTimerWork) {\n    let timerIdCheck = setTimeout(function run(isTimerWork) {\n      setRecursiveCheackTimerId(timerIdCheck);\n      console.log(\"check\");\n\n      if (apartment) {\n        clearTimeout(timerIdCheck);\n        clearTimeout(recursiveCheackTimerId); //timer(apartment);\n      } else {\n        timerIdCheck = setTimeout(cheackTimer, 5000);\n      }\n    }, 5000);\n    setRecursiveCheackTimerId(timerIdCheck);\n  }\n\n  function timer(apartment) {\n    let timerId = setTimeout(function run() {\n      console.log(isTimerWork);\n      setRecursiveTimeoutId(timerId);\n\n      if (props.test1 == true) {\n        console.log(timerId);\n        ++newPosition;\n\n        if (apartment.whatsOutside.length - 1 < newPosition) {\n          newPosition = 0;\n          setPositionOfImg(() => 0);\n        } else {\n          setPositionOfImg(() => newPosition);\n        }\n\n        timerId = setTimeout(run, 5000);\n      } else {\n        console.log(\"STOP\");\n        console.log(props.test1);\n        clearTimeout(recursiveTimeoutId);\n        clearTimeout(timerId);\n      }\n    }, 5000);\n    console.log(isTimerWork);\n    setRecursiveTimeoutId(timerId);\n  } //TODO походу проблема в том что таймер 2 раза запускаеться \n\n\n  const changePositionImgOnClick = isAddOne => {\n    props.setInt228(false);\n    let intId = setInterval(run, 3000);\n    let bool = true;\n    bool = false;\n\n    function run() {\n      console.log(bool);\n\n      if (bool == true) {\n        ++newPosition;\n\n        if (apartment.whatsOutside.length - 1 < newPosition) {\n          newPosition = 0;\n          setPositionOfImg(() => 0);\n        } else {\n          setPositionOfImg(() => newPosition);\n        }\n      } else {\n        console.log(\"STOP\");\n        console.log(props.test1);\n        clearInterval(intId);\n        clearTimeout(recursiveTimeoutId);\n      }\n    } //TODO тут надо прирывать и не закрывать тайм аут и вывести ран в отдельность\n    // let timerId = setTimeout(function run() {\n    //     console.log(isTimerWork)\n    //     setRecursiveTimeoutId(timerId);\n    //     if (props.test1 == true) {\n    //         console.log(timerId);\n    //         ++newPosition;\n    //         if (apartment.whatsOutside.length - 1 < newPosition) {\n    //             newPosition = 0;\n    //             setPositionOfImg(() => 0);\n    //         } else {\n    //             setPositionOfImg(() => newPosition);\n    //         }\n    //         timerId = setTimeout(run, 5000);\n    //     } else {\n    //         console.log(\"STOP\");\n    //         console.log(props.test1);\n    //         clearTimeout(recursiveTimeoutId)\n    //         clearTimeout(timerId)\n    //     }\n    // }, 5000);\n\n\n    const stopRecursiveTimeout = () => {\n      console.log(\"hy\");\n      setTimerWork(false);\n      clearTimeout(recursiveTimeoutId);\n      props.setInt228(false);\n      console.log(isTimerWork);\n    };\n\n    stopRecursiveTimeout();\n    const imgsLength = apartment.whatsOutside.length;\n\n    if (isAddOne == true) {\n      if (positionOfImg >= imgsLength - 1) {\n        setPositionOfImg(0);\n      } else {\n        setPositionOfImg(positionOfImg + 1);\n      }\n    } else {\n      if (positionOfImg - 1 < 0) {\n        setPositionOfImg(imgsLength - 1);\n      } else {\n        setPositionOfImg(positionOfImg - 1);\n      }\n    } //timer(apartment, true)\n\n  };\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    let picUrl = imgs[positionOfImg].url;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whatsOutside-image\",\n        src: picUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: [isTimerWork ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"UNOK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => changePositionImgOnClick(false),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 29\n            }, this), apartment ? renderImg() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              onClick: () => changePositionImgOnClick(true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"7031oqDogbQjLizzpwAoqsp/wls=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\n  test1: state.whatsOutsideArray.test1\n});\n\nexport default connect(mapStateToProps, {\n  setInt228: actions.setInt228\n})(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useState","Col","Row","connect","actions","arrowButtonJpg","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","positionOfImg","setPositionOfImg","recursiveTimeoutId","setRecursiveTimeoutId","recursiveCheackTimerId","setRecursiveCheackTimerId","isTimerWork","setTimerWork","newPosition","bool","intId","run","console","log","whatsOutside","length","test1","clearInterval","clearTimeout","timer","timerId","setTimeout","cheackTimer","timerIdCheck","changePositionImgOnClick","isAddOne","setInt228","setInterval","stopRecursiveTimeout","imgsLength","renderImg","imgs","picUrl","url","offset","span","mapStateToProps","state","apartmentsArray","whatsOutsideArray"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { actions } from '../actions and const/actions';\r\nimport arrowButtonJpg from './Arrow-button.jpg'\r\n\r\nconst WhatsOutside = (props: any) => {\r\n\r\n\r\n\r\n    const apartment = props.apartments[props.indexOfSelectedApartment];\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState(0);\r\n    const [recursiveTimeoutId, setRecursiveTimeoutId] = useState<any>();\r\n    const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState<any>();\r\n    const [isTimerWork, setTimerWork] = useState<boolean>(true);\r\n\r\n    let newPosition = positionOfImg;\r\n\r\n    let bool = true\r\n    let intId = 0\r\n\r\n\r\n    // useEffect(() => {\r\n    //     apartment ? timer(apartment) : cheackTimer(apartment, isTimerWork);\r\n    // }, [apartment]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function run() {\r\n        console.log(bool)\r\n        if (bool == true) {\r\n            ++newPosition;\r\n\r\n            if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                newPosition = 0;\r\n                setPositionOfImg(() => 0);\r\n            } else {\r\n                setPositionOfImg(() => newPosition);\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            console.log(\"STOP\");\r\n            console.log(props.test1);\r\n\r\n            clearInterval(intId)\r\n\r\n\r\n            clearTimeout(recursiveTimeoutId)\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    function timer(apartment: any) {\r\n\r\n\r\n        let timerId = setTimeout(function run() {\r\n\r\n            console.log(isTimerWork)\r\n            setRecursiveTimeoutId(timerId);\r\n\r\n\r\n            if (props.test1 == true) {\r\n\r\n\r\n                console.log(timerId);\r\n                ++newPosition;\r\n\r\n\r\n                if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                    newPosition = 0;\r\n                    setPositionOfImg(() => 0);\r\n                } else {\r\n                    setPositionOfImg(() => newPosition);\r\n                }\r\n                timerId = setTimeout(run, 5000);\r\n\r\n            } else {\r\n\r\n                console.log(\"STOP\");\r\n                console.log(props.test1);\r\n\r\n\r\n                clearTimeout(recursiveTimeoutId)\r\n                clearTimeout(timerId)\r\n            }\r\n        }, 5000);\r\n\r\n\r\n        console.log(isTimerWork)\r\n\r\n\r\n        setRecursiveTimeoutId(timerId)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    function cheackTimer(apartment: any, isTimerWork: boolean) {\r\n        let timerIdCheck = setTimeout(function run(isTimerWork: boolean) {\r\n            setRecursiveCheackTimerId(timerIdCheck);\r\n\r\n            console.log(\"check\");\r\n\r\n            if (apartment) {\r\n                clearTimeout(timerIdCheck);\r\n                clearTimeout(recursiveCheackTimerId);\r\n                //timer(apartment);\r\n            } else {\r\n                timerIdCheck = setTimeout(cheackTimer, 5000);\r\n            }\r\n        }, 5000);\r\n        setRecursiveCheackTimerId(timerIdCheck);\r\n    }\r\n\r\n\r\n    function timer(apartment: any) {\r\n\r\n\r\n        let timerId = setTimeout(function run() {\r\n\r\n            console.log(isTimerWork)\r\n            setRecursiveTimeoutId(timerId);\r\n\r\n\r\n            if (props.test1 == true) {\r\n\r\n\r\n                console.log(timerId);\r\n                ++newPosition;\r\n\r\n\r\n                if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                    newPosition = 0;\r\n                    setPositionOfImg(() => 0);\r\n                } else {\r\n                    setPositionOfImg(() => newPosition);\r\n                }\r\n                timerId = setTimeout(run, 5000);\r\n\r\n            } else {\r\n\r\n                console.log(\"STOP\");\r\n                console.log(props.test1);\r\n\r\n\r\n                clearTimeout(recursiveTimeoutId)\r\n                clearTimeout(timerId)\r\n            }\r\n        }, 5000);\r\n\r\n\r\n        console.log(isTimerWork)\r\n\r\n\r\n        setRecursiveTimeoutId(timerId)\r\n\r\n    }\r\n\r\n\r\n\r\n    //TODO походу проблема в том что таймер 2 раза запускаеться \r\n    const changePositionImgOnClick = (isAddOne: boolean) => {\r\n\r\n        props.setInt228(false)\r\n\r\n\r\n        let intId = setInterval(run, 3000)\r\n\r\n\r\n\r\n        let bool:boolean = true \r\n\r\n        bool = false\r\n\r\n\r\n        function run() {\r\n            console.log(bool)\r\n            if (bool == true) {\r\n                ++newPosition;\r\n\r\n                if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                    newPosition = 0;\r\n                    setPositionOfImg(() => 0);\r\n                } else {\r\n                    setPositionOfImg(() => newPosition);\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n                console.log(\"STOP\");\r\n                console.log(props.test1);\r\n\r\n                clearInterval(intId)\r\n\r\n\r\n                clearTimeout(recursiveTimeoutId)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //TODO тут надо прирывать и не закрывать тайм аут и вывести ран в отдельность\r\n\r\n        // let timerId = setTimeout(function run() {\r\n\r\n        //     console.log(isTimerWork)\r\n        //     setRecursiveTimeoutId(timerId);\r\n\r\n\r\n        //     if (props.test1 == true) {\r\n\r\n\r\n        //         console.log(timerId);\r\n        //         ++newPosition;\r\n\r\n\r\n        //         if (apartment.whatsOutside.length - 1 < newPosition) {\r\n        //             newPosition = 0;\r\n        //             setPositionOfImg(() => 0);\r\n        //         } else {\r\n        //             setPositionOfImg(() => newPosition);\r\n        //         }\r\n        //         timerId = setTimeout(run, 5000);\r\n\r\n        //     } else {\r\n\r\n        //         console.log(\"STOP\");\r\n        //         console.log(props.test1);\r\n\r\n\r\n        //         clearTimeout(recursiveTimeoutId)\r\n        //         clearTimeout(timerId)\r\n        //     }\r\n        // }, 5000);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const stopRecursiveTimeout = () => {\r\n\r\n            console.log(\"hy\");\r\n\r\n\r\n            setTimerWork(false)\r\n            clearTimeout(recursiveTimeoutId)\r\n            props.setInt228(false)\r\n\r\n            console.log(isTimerWork)\r\n\r\n        };\r\n        stopRecursiveTimeout();\r\n\r\n\r\n\r\n        const imgsLength = apartment.whatsOutside.length\r\n\r\n\r\n\r\n        if (isAddOne == true) {\r\n\r\n            if (positionOfImg >= imgsLength - 1) {\r\n                setPositionOfImg(0)\r\n            } else {\r\n                setPositionOfImg(positionOfImg + 1)\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n\r\n            if (positionOfImg - 1 < 0) {\r\n                setPositionOfImg(imgsLength - 1)\r\n            } else {\r\n                setPositionOfImg(positionOfImg - 1)\r\n            }\r\n        }\r\n\r\n        //timer(apartment, true)\r\n\r\n    };\r\n\r\n\r\n\r\n    const renderImg = () => {\r\n        const imgs = apartment.whatsOutside;\r\n        let picUrl = imgs[positionOfImg].url;\r\n\r\n        return (\r\n            <>\r\n                <img className=\"whatsOutside-image\" src={picUrl} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n\r\n                        {isTimerWork ? <div>OK</div> : <div>UNOK</div>}\r\n\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\" onClick={() => changePositionImgOnClick(false)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-left\" />\r\n\r\n                            </div>\r\n                            {apartment ? renderImg() : <div>bad</div>}\r\n                            <div className=\"whatsOutside-swipeRight\" onClick={() => changePositionImgOnClick(true)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-right\" />\r\n                                {/* <div className=\"whatsOutside-swipeRight\" onClick={() => setPositionOfImg(positionOfImg + 1)}> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n    test1: state.whatsOutsideArray.test1,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setInt228: actions.setInt228 })(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}