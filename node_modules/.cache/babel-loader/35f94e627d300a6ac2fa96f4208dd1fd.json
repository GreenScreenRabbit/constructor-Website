{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\apartmentShowcase\\\\Showcase.tsx\";\nimport React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { actions } from '../actions and const/actions';\nimport { asyncActions } from '../actions and const/asyncActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Showcase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePicturePosition = (apartmentOfSelectedRoom, indexRoom) => {\n      clearInterval(this.props.intervalIdPictureHouseItself);\n      this.props.setPositionPictureOfRoom(0);\n      this.props.setPositionOfPicture(0);\n      this.props.setIndexOfSelectedRoom(0);\n      clearInterval(this.props.intervalIdForPicture);\n      this.props.setIndexOfSelectedRoom(indexRoom);\n      let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\n      const int = setInterval(() => {\n        this.props.setIntervalIdForPicture(int);\n        let newPosition = this.props.positionOfPicture + 1;\n        if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);else this.props.setPositionOfPicture(newPosition);\n      }, 5000);\n      this.props.setIntervalIdForPicture(int);\n    };\n  }\n\n  render() {\n    const RenderShowCase = () => {\n      return this.props.apartmentsArray.map((apartment, indexApartment) => {\n        if (indexApartment == this.props.indexOfSelectedApartment) {\n          return apartment.rooms.map((room, indexRoom) => {\n            let residue = indexRoom % 2;\n\n            if (residue == 0) {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                lg: {\n                  span: 2,\n                  offset: 0,\n                  order: 1\n                },\n                className: \"colWithoutPadding\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ForLeftShowcase\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"apartmentShowcase-selectRoom\",\n                    onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                    children: room.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this) // <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\n              //     {room.name}\n              // </div>\n              ;\n            } else {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                lg: {\n                  span: 2,\n                  offset: 0,\n                  order: 1\n                },\n                className: \"colWithoutPadding\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ForLeftShowcase\",\n                  children: [\"// \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"apartmentShowcase-selectRoom-alt\",\n                    onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                    children: [\"//     \", room.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this) // <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\n              //     {room.name}\n              // </div>\n              ;\n            }\n          });\n        }\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RenderShowCase, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\n  isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\n  apartmentsArray: state.apartmentsArray.apartments,\n  positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\n  intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\n  intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself\n});\n\nexport default connect(mapStateToProps, {\n  setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\n  setApartmentsFromState: actions.setApartmentsFromState,\n  setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\n  setShowCaseOnFocus: actions.setShowCaseOnFocus,\n  setIntervalForPicture: actions.setIntervalForPicture,\n  setPositionOfPicture: actions.setPositionOfPicture,\n  setIntervalIdForPicture: actions.setIntervalIdForPicture,\n  changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom\n})(Showcase);","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/apartmentShowcase/Showcase.tsx"],"names":["React","Component","Col","connect","actions","asyncActions","Showcase","changePicturePosition","apartmentOfSelectedRoom","indexRoom","clearInterval","props","intervalIdPictureHouseItself","setPositionPictureOfRoom","setPositionOfPicture","setIndexOfSelectedRoom","intervalIdForPicture","lengthOfPictures","rooms","pictures","length","int","setInterval","setIntervalIdForPicture","newPosition","positionOfPicture","render","RenderShowCase","apartmentsArray","map","apartment","indexApartment","indexOfSelectedApartment","room","residue","span","offset","order","name","mapStateToProps","state","indexOfSelectedRoom","showcaseStylesAndIndex","isIntervalForPictureWorking","apartments","setApartmentsFromState","setShowCaseOnFocus","setIntervalForPicture","changePositionPictureOfRoom"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { Transition } from 'react-transition-group';\r\nimport { actions } from '../actions and const/actions';\r\nimport { asyncActions } from '../actions and const/asyncActions';\r\n\r\nclass Showcase extends Component<any> {\r\n    //TODO сделать setPicPos 0\r\n    changePicturePosition = (apartmentOfSelectedRoom: any, indexRoom: number) => {\r\n        clearInterval(this.props.intervalIdPictureHouseItself);\r\n        this.props.setPositionPictureOfRoom(0);\r\n        this.props.setPositionOfPicture(0);\r\n        this.props.setIndexOfSelectedRoom(0);\r\n\r\n        clearInterval(this.props.intervalIdForPicture);\r\n\r\n        this.props.setIndexOfSelectedRoom(indexRoom);\r\n\r\n        let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\r\n\r\n        const int = setInterval(() => {\r\n            this.props.setIntervalIdForPicture(int);\r\n            let newPosition = this.props.positionOfPicture + 1;\r\n\r\n            if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);\r\n            else this.props.setPositionOfPicture(newPosition);\r\n        }, 5000);\r\n\r\n        this.props.setIntervalIdForPicture(int);\r\n    };\r\n\r\n    render() {\r\n        const RenderShowCase = () => {\r\n            return this.props.apartmentsArray.map((apartment: any, indexApartment: number) => {\r\n                if (indexApartment == this.props.indexOfSelectedApartment) {\r\n                    return apartment.rooms.map((room: any, indexRoom: number) => {\r\n                        let residue = indexRoom % 2;\r\n                        if (residue == 0) {\r\n                            return (\r\n                                <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                                    <div className=\"ForLeftShowcase\">\r\n                                        <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                            {room.name}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                // <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                //     {room.name}\r\n                                // </div>\r\n                            );\r\n                        } else {\r\n                            return (\r\n\r\n\r\n                                <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                                <div className=\"ForLeftShowcase\">\r\n                                // <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                //     {room.name}\r\n                                 </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                // <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                //     {room.name}\r\n                                // </div>\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <RenderShowCase />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateOrAny) => ({\r\n    indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n    isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\r\n    apartmentsArray: state.apartmentsArray.apartments,\r\n    positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\r\n    intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\r\n    intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\r\n    setApartmentsFromState: actions.setApartmentsFromState,\r\n    setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\r\n    setShowCaseOnFocus: actions.setShowCaseOnFocus,\r\n    setIntervalForPicture: actions.setIntervalForPicture,\r\n    setPositionOfPicture: actions.setPositionOfPicture,\r\n    setIntervalIdForPicture: actions.setIntervalIdForPicture,\r\n    changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom,\r\n})(Showcase);\r\n"]},"metadata":{},"sourceType":"module"}