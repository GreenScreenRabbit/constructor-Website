{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment];\n  const [positionOfImg, setPositionOfImg] = useState(0);\n  const [intervalId, setIntervalId] = useState();\n  const [recursiveTimeoutId, setRecursiveTimeoutId] = useState();\n  const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState();\n  const [recursiveTimeoutIsWorking, setRecursiveTimeoutIsWorking] = useState(true);\n  let newPosition = positionOfImg; //TODO ващемта дело в том что сналало запускаеться функция чек и так и остаеться\n\n  useEffect(() => {\n    apartment ? timer(apartment) : cheackTimer(apartment);\n  }, [apartment]); //TODO надо учистить cheackTimer\n\n  function cheackTimer(apartment) {\n    let timerIdCheck = setTimeout(function run() {\n      setRecursiveCheackTimerId(timerIdCheck);\n\n      if (apartment) {\n        clearTimeout(timerIdCheck);\n        clearTimeout(recursiveCheackTimerId);\n        timer(apartment);\n      } else {\n        timerIdCheck = setTimeout(cheackTimer, 5000);\n      }\n    }, 5000);\n  }\n\n  function timer(apartment) {\n    let timerId = setTimeout(function run() {\n      setRecursiveTimeoutId(timerId);\n      ++newPosition;\n\n      if (apartment.whatsOutside.length - 1 < newPosition) {\n        newPosition = 0;\n        setPositionOfImg(() => 0);\n      } else {\n        setPositionOfImg(() => newPosition);\n      }\n\n      timerId = setTimeout(run, 5000);\n    }, 5000);\n  } //TODO надо решить эту сраную проблему\n\n\n  const changePositionImgOnClick = () => {\n    const stopRecursiveTimeout = () => {\n      setRecursiveTimeoutIsWorking(false);\n      clearTimeout(recursiveCheackTimerId + 4);\n      clearTimeout(recursiveTimeoutId + 2);\n    };\n\n    stopRecursiveTimeout();\n    const imgsLength = apartment.whatsOutside.length;\n\n    if (positionOfImg >= imgsLength) {\n      setPositionOfImg(0);\n    } else {\n      setPositionOfImg(positionOfImg + 1);\n    }\n  }; // TODO где-то тут функция вызиваеться триллион раз\n  // фуннкция вызиваеться сначало 1 раз потом 2 , 4 , 8 и тд\n\n\n  function intChangePositionOfImg() {\n    if (apartment != undefined) {\n      let int = setTimeout(function tick() {\n        function run(apartment) {\n          ++newPosition;\n          setIntervalId(int);\n\n          if (apartment) {\n            if (apartment.whatsOutside.length - 1 < newPosition) {\n              setPositionOfImg(() => 0);\n            } else {\n              setPositionOfImg(() => newPosition);\n            }\n          }\n        }\n\n        run(apartment);\n        int = setTimeout(tick, 2000);\n      }, 2000);\n    } //return () => clearInterval(int)\n\n  }\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    let picUrl = imgs[positionOfImg].url;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whatsOutside-image\",\n        src: picUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => changePositionImgOnClick(),\n              children: [positionOfImg, '<<<<<<<']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), apartment ? renderImg() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 56\n            }, this), \"//\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              onClick: () => setPositionOfImg(positionOfImg + 1),\n              children: [\"right\", '>>>>>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"kP4uU8H83amQIPhYGqbYiCTLHPg=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment\n});\n\nexport default connect(mapStateToProps, null)(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useEffect","useState","Col","Row","connect","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","positionOfImg","setPositionOfImg","intervalId","setIntervalId","recursiveTimeoutId","setRecursiveTimeoutId","recursiveCheackTimerId","setRecursiveCheackTimerId","recursiveTimeoutIsWorking","setRecursiveTimeoutIsWorking","newPosition","timer","cheackTimer","timerIdCheck","setTimeout","run","clearTimeout","timerId","whatsOutside","length","changePositionImgOnClick","stopRecursiveTimeout","imgsLength","intChangePositionOfImg","undefined","int","tick","renderImg","imgs","picUrl","url","offset","span","mapStateToProps","state","apartmentsArray"],"mappings":";;;AAAA,SAAoBA,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwC,aAAxC;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAgB;AAAA;;AACjC,QAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACG,wBAAvB,CAAlB;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;AACA,QAAM,CAACa,kBAAD,EAAqBC,qBAArB,IAA8Cd,QAAQ,EAA5D;AACA,QAAM,CAACe,sBAAD,EAAyBC,yBAAzB,IAAsDhB,QAAQ,EAApE;AACA,QAAM,CAACiB,yBAAD,EAA4BC,4BAA5B,IAA4DlB,QAAQ,CAAU,IAAV,CAA1E;AAEA,MAAImB,WAAW,GAAGV,aAAlB,CATiC,CAWjC;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,GAAGc,KAAK,CAACd,SAAD,CAAR,GAAsBe,WAAW,CAACf,SAAD,CAA1C;AACH,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT,CAZiC,CAgBjC;;AACA,WAASe,WAAT,CAAqBf,SAArB,EAAqC;AACjC,QAAIgB,YAAY,GAAGC,UAAU,CAAC,SAASC,GAAT,GAAe;AACzCR,MAAAA,yBAAyB,CAACM,YAAD,CAAzB;;AAEA,UAAIhB,SAAJ,EAAe;AACXmB,QAAAA,YAAY,CAACH,YAAD,CAAZ;AACAG,QAAAA,YAAY,CAACV,sBAAD,CAAZ;AACAK,QAAAA,KAAK,CAACd,SAAD,CAAL;AACH,OAJD,MAIO;AACHgB,QAAAA,YAAY,GAAGC,UAAU,CAACF,WAAD,EAAc,IAAd,CAAzB;AACH;AACJ,KAV4B,EAU1B,IAV0B,CAA7B;AAWH;;AAED,WAASD,KAAT,CAAed,SAAf,EAA+B;AAC3B,QAAIoB,OAAO,GAAGH,UAAU,CAAC,SAASC,GAAT,GAAe;AACpCV,MAAAA,qBAAqB,CAACY,OAAD,CAArB;AAEA,QAAEP,WAAF;;AACA,UAAIb,SAAS,CAACqB,YAAV,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCT,WAAxC,EAAqD;AACjDA,QAAAA,WAAW,GAAG,CAAd;AACAT,QAAAA,gBAAgB,CAAC,MAAM,CAAP,CAAhB;AACH,OAHD,MAGO;AACHA,QAAAA,gBAAgB,CAAC,MAAMS,WAAP,CAAhB;AACH;;AACDO,MAAAA,OAAO,GAAGH,UAAU,CAACC,GAAD,EAAM,IAAN,CAApB;AACH,KAXuB,EAWrB,IAXqB,CAAxB;AAYH,GA5CgC,CA8CjC;;;AACA,QAAMK,wBAAwB,GAAG,MAAM;AACnC,UAAMC,oBAAoB,GAAG,MAAM;AAC/BZ,MAAAA,4BAA4B,CAAC,KAAD,CAA5B;AAEAO,MAAAA,YAAY,CAACV,sBAAsB,GAAG,CAA1B,CAAZ;AACAU,MAAAA,YAAY,CAACZ,kBAAkB,GAAI,CAAvB,CAAZ;AACH,KALD;;AAMAiB,IAAAA,oBAAoB;AAEpB,UAAMC,UAAU,GAAGzB,SAAS,CAACqB,YAAV,CAAuBC,MAA1C;;AAEA,QAAGnB,aAAa,IAAIsB,UAApB,EAA+B;AAC3BrB,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH,KAFD,MAEK;AACDA,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH;AAEJ,GAjBD,CA/CiC,CAkEjC;AACA;;;AACA,WAASuB,sBAAT,GAAkC;AAC9B,QAAI1B,SAAS,IAAI2B,SAAjB,EAA4B;AACxB,UAAIC,GAAG,GAAGX,UAAU,CAAC,SAASY,IAAT,GAAgB;AACjC,iBAASX,GAAT,CAAalB,SAAb,EAA6B;AACzB,YAAEa,WAAF;AAEAP,UAAAA,aAAa,CAACsB,GAAD,CAAb;;AAEA,cAAI5B,SAAJ,EAAe;AACX,gBAAIA,SAAS,CAACqB,YAAV,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCT,WAAxC,EAAqD;AACjDT,cAAAA,gBAAgB,CAAC,MAAM,CAAP,CAAhB;AACH,aAFD,MAEO;AACHA,cAAAA,gBAAgB,CAAC,MAAMS,WAAP,CAAhB;AACH;AACJ;AACJ;;AACDK,QAAAA,GAAG,CAAClB,SAAD,CAAH;AAEA4B,QAAAA,GAAG,GAAGX,UAAU,CAACY,IAAD,EAAO,IAAP,CAAhB;AACH,OAjBmB,EAiBjB,IAjBiB,CAApB;AAkBH,KApB6B,CAsB9B;;AACH;;AAED,QAAMC,SAAS,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAG/B,SAAS,CAACqB,YAAvB;AACA,QAAIW,MAAM,GAAGD,IAAI,CAAC5B,aAAD,CAAJ,CAAoB8B,GAAjC;AAEA,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAED;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH,GATD;;AAWA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEE,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAAT;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,wBAAf;AAAwC,cAAA,OAAO,EAAE,MAAMZ,wBAAwB,EAA/E;AAAA,yBACKpB,aADL,EAGK,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAMKH,SAAS,GAAG8B,SAAS,EAAZ,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAN/B,qBAOM;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAyC,cAAA,OAAO,EAAE,MAAM1B,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAxE;AAAA,kCACQ,OADR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqBH,CA7HD;;GAAML,Y;;KAAAA,Y;;AA+HN,MAAMsC,eAAe,GAAIC,KAAD,KAA4B;AAChDpC,EAAAA,UAAU,EAAEoC,KAAK,CAACC,eAAN,CAAsBrC,UADc;AAEhDC,EAAAA,wBAAwB,EAAEmC,KAAK,CAACC,eAAN,CAAsBpC;AAFA,CAA5B,CAAxB;;AAKA,eAAeL,OAAO,CAACuC,eAAD,EAAkB,IAAlB,CAAP,CAA+BtC,YAA/B,CAAf","sourcesContent":["import { Component, useEffect, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\n\r\nconst WhatsOutside = (props: any) => {\r\n    const apartment = props.apartments[props.indexOfSelectedApartment];\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState(0);\r\n    const [intervalId, setIntervalId] = useState<NodeJS.Timeout>();\r\n    const [recursiveTimeoutId, setRecursiveTimeoutId] = useState<any>();\r\n    const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState<any>();\r\n    const [recursiveTimeoutIsWorking, setRecursiveTimeoutIsWorking] = useState<boolean>(true);\r\n\r\n    let newPosition = positionOfImg;\r\n\r\n    //TODO ващемта дело в том что сналало запускаеться функция чек и так и остаеться\r\n    useEffect(() => {\r\n        apartment ? timer(apartment) : cheackTimer(apartment);\r\n    }, [apartment]);\r\n\r\n    //TODO надо учистить cheackTimer\r\n    function cheackTimer(apartment: any) {\r\n        let timerIdCheck = setTimeout(function run() {\r\n            setRecursiveCheackTimerId(timerIdCheck);\r\n\r\n            if (apartment) {\r\n                clearTimeout(timerIdCheck);\r\n                clearTimeout(recursiveCheackTimerId);\r\n                timer(apartment);\r\n            } else {\r\n                timerIdCheck = setTimeout(cheackTimer, 5000);\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    function timer(apartment: any) {\r\n        let timerId = setTimeout(function run() {\r\n            setRecursiveTimeoutId(timerId);\r\n\r\n            ++newPosition;\r\n            if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                newPosition = 0;\r\n                setPositionOfImg(() => 0);\r\n            } else {\r\n                setPositionOfImg(() => newPosition);\r\n            }\r\n            timerId = setTimeout(run, 5000);\r\n        }, 5000);\r\n    }\r\n\r\n    //TODO надо решить эту сраную проблему\r\n    const changePositionImgOnClick = () => {\r\n        const stopRecursiveTimeout = () => {\r\n            setRecursiveTimeoutIsWorking(false);\r\n\r\n            clearTimeout(recursiveCheackTimerId + 4);\r\n            clearTimeout(recursiveTimeoutId! + 2);\r\n        };\r\n        stopRecursiveTimeout();\r\n\r\n        const imgsLength = apartment.whatsOutside.length\r\n\r\n        if(positionOfImg >= imgsLength){\r\n            setPositionOfImg(0)\r\n        }else{\r\n            setPositionOfImg(positionOfImg + 1)\r\n        }\r\n\r\n    };\r\n\r\n    // TODO где-то тут функция вызиваеться триллион раз\r\n    // фуннкция вызиваеться сначало 1 раз потом 2 , 4 , 8 и тд\r\n    function intChangePositionOfImg() {\r\n        if (apartment != undefined) {\r\n            let int = setTimeout(function tick() {\r\n                function run(apartment: any) {\r\n                    ++newPosition;\r\n\r\n                    setIntervalId(int);\r\n\r\n                    if (apartment) {\r\n                        if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                            setPositionOfImg(() => 0);\r\n                        } else {\r\n                            setPositionOfImg(() => newPosition);\r\n                        }\r\n                    }\r\n                }\r\n                run(apartment);\r\n\r\n                int = setTimeout(tick, 2000);\r\n            }, 2000);\r\n        }\r\n\r\n        //return () => clearInterval(int)\r\n    }\r\n\r\n    const renderImg = () => {\r\n        const imgs = apartment.whatsOutside;\r\n        let picUrl = imgs[positionOfImg].url;\r\n\r\n        return (\r\n            <>\r\n                <img className=\"whatsOutside-image\" src={picUrl} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\" onClick={() => changePositionImgOnClick()}>\r\n                                {positionOfImg}\r\n\r\n                                {'<<<<<<<'}\r\n                            </div>\r\n                            {apartment ? renderImg() : <div>bad</div>}\r\n                            //<div className=\"whatsOutside-swipeRight\" onClick={() => setPositionOfImg(positionOfImg + 1)}>\r\n                                right{'>>>>>'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}