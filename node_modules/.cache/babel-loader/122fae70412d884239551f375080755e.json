{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment];\n  console.log(apartment);\n  const [positionOfImg, setPositionOfImg] = useState();\n  const int = setInterval(() => {\n    this.props.setIntervalIdForPicture(int);\n    let newPosition = this.props.positionOfPicture + 1;\n    if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);else this.props.setPositionOfPicture(newPosition);\n  }, 5000);\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    const int = setInterval(() => {});\n  };\n\n  const [value1, setValue] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => setValue(1 + value1),\n              children: [value1, '<<<<<<<']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-image\",\n              children: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              children: [\"right\", '>>>>>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"Xz4JogUgxKVMDQrp6x8yZ+pyCbk=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment\n});\n\nexport default connect(mapStateToProps, null)(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useState","Col","Row","connect","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","console","log","positionOfImg","setPositionOfImg","int","setInterval","setIntervalIdForPicture","newPosition","positionOfPicture","lengthOfPictures","setPositionOfPicture","renderImg","imgs","whatsOutside","value1","setValue","offset","span","mapStateToProps","state","apartmentsArray"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwC,aAAxC;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAe;AAAA;;AAEhC,QAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACG,wBAAvB,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,EAAlD;AAEA,QAAMa,GAAG,GAAGC,WAAW,CAAC,MAAM;AAC1B,SAAKT,KAAL,CAAWU,uBAAX,CAAmCF,GAAnC;AACA,QAAIG,WAAW,GAAG,KAAKX,KAAL,CAAWY,iBAAX,GAA+B,CAAjD;AAEA,QAAIC,gBAAgB,GAAG,CAAnB,GAAuBF,WAA3B,EAAwC,KAAKX,KAAL,CAAWc,oBAAX,CAAgC,CAAhC,EAAxC,KACK,KAAKd,KAAL,CAAWc,oBAAX,CAAgCH,WAAhC;AACR,GANsB,EAMpB,IANoB,CAAvB;;AAcA,QAAMI,SAAS,GAAG,MAAM;AAEpB,UAAMC,IAAI,GAAGf,SAAS,CAACgB,YAAvB;AAEA,UAAMT,GAAG,GAAGC,WAAW,CAAC,MAAM,CAE7B,CAFsB,CAAvB;AAKH,GATD;;AAYA,QAAM,CAACS,MAAD,EAASC,QAAT,IAAqBxB,QAAQ,CAAC,CAAD,CAAnC;AACH,sBACO;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEyB,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAAT;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,wBAAf;AACA,cAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,IAAID,MAAL,CADvB;AAAA,yBAGKA,MAHL,EAIK,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA,kCAA+C,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADP;AAoBA,CAtDD;;GAAMnB,Y;;KAAAA,Y;;AAyDN,MAAMuB,eAAe,GAAIC,KAAD,KAA4B;AAChDrB,EAAAA,UAAU,EAAEqB,KAAK,CAACC,eAAN,CAAsBtB,UADc;AAEhDC,EAAAA,wBAAwB,EAAEoB,KAAK,CAACC,eAAN,CAAsBrB;AAFA,CAA5B,CAAxB;;AAQA,eAAeL,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,YAA/B,CAAf","sourcesContent":["import { Component, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\n\r\nconst WhatsOutside = (props:any) => {\r\n\r\n    const apartment = props.apartments[props.indexOfSelectedApartment]\r\n    console.log(apartment);\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState()\r\n\r\n    const int = setInterval(() => {\r\n        this.props.setIntervalIdForPicture(int);\r\n        let newPosition = this.props.positionOfPicture + 1;\r\n\r\n        if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);\r\n        else this.props.setPositionOfPicture(newPosition);\r\n    }, 5000);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const renderImg = () => {\r\n\r\n        const imgs = apartment.whatsOutside    \r\n\r\n        const int = setInterval(() => {\r\n            \r\n        })\r\n\r\n\r\n    }\r\n    \r\n    \r\n    const [value1, setValue] = useState(1);\r\n return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\"\r\n                            onClick={() => setValue(1 + value1)} \r\n                            >\r\n                                {value1}\r\n                                {'<<<<<<<'}\r\n                            </div>\r\n                            <div className=\"whatsOutside-image\">img</div>\r\n                            <div className=\"whatsOutside-swipeRight\">right{'>>>>>'}</div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}