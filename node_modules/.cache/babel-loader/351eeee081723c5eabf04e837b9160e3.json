{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\apartmentShowcase\\\\Showcase.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../actions and const/actions';\nimport { asyncActions } from '../actions and const/asyncActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Showcase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePicturePosition = (apartmentOfSelectedRoom, indexRoom) => {\n      clearInterval(this.props.intervalIdPictureHouseItself);\n      this.props.setPositionPictureOfRoom(0);\n      this.props.setPositionOfPicture(0);\n      this.props.setIndexOfSelectedRoom(0);\n      clearInterval(this.props.intervalIdForPicture);\n      this.props.setIndexOfSelectedRoom(indexRoom);\n      let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\n      const int = setInterval(() => {\n        this.props.setIntervalIdForPicture(int);\n        let newPosition = this.props.positionOfPicture + 1;\n        if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);else this.props.setPositionOfPicture(newPosition);\n      }, 5000);\n      this.props.setIntervalIdForPicture(int);\n    };\n  }\n\n  render() {\n    const RenderShowCase = () => {\n      return this.props.apartmentsArray.map((apartment, indexApartment) => {\n        if (indexApartment == this.props.indexOfSelectedApartment) {\n          return apartment.rooms.map((room, indexRoom) => {\n            let residue = indexRoom % 2;\n\n            if (residue == 0) {\n              return (\n                /*#__PURE__*/\n                // <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\n                //     <div className=\"ForLeftShowcase\">\n                //         <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\n                //             {room.name}\n                //         </div>\n                //     </div>\n                // </Col>\n                _jsxDEV(\"div\", {\n                  className: \"apartmentShowcase-selectRoom\",\n                  onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                  children: room.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this)\n              );\n            } else {\n              return (\n                /*#__PURE__*/\n                // <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\n                //     <div className=\"ForLeftShowcase\">\n                //         <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\n                //             {room.name}\n                //         </div>\n                //     </div>\n                // </Col>\n                _jsxDEV(\"div\", {\n                  className: \"apartmentShowcase-selectRoom-alt\",\n                  onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                  children: room.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 33\n                }, this)\n              );\n            }\n          });\n        }\n      });\n    };\n\n    const left = a => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    };\n\n    const right = a => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    }; //TODO у нас всегда первое возвращаеться это результат функции\n\n\n    const f1 = () => {\n      let showCaseArr = RenderShowCase();\n      return showCaseArr.map((item, index) => {\n        let result = index % 2;\n        console.log(result);\n\n        if (item != undefined) {\n          return item.map((item2, index) => {\n            let result = index % 2;\n\n            if (result == 0) {\n              return left(item);\n            } else {\n              return right(item);\n            }\n          });\n        }\n\n        ; // if (result == 0) {\n        //     return left(item);\n        // } else {\n        //     return right(item);\n        // }\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: f1()\n    }, void 0, false);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\n  isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\n  apartmentsArray: state.apartmentsArray.apartments,\n  positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\n  intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\n  intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself\n});\n\nexport default connect(mapStateToProps, {\n  setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\n  setApartmentsFromState: actions.setApartmentsFromState,\n  setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\n  setShowCaseOnFocus: actions.setShowCaseOnFocus,\n  setIntervalForPicture: actions.setIntervalForPicture,\n  setPositionOfPicture: actions.setPositionOfPicture,\n  setIntervalIdForPicture: actions.setIntervalIdForPicture,\n  changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom\n})(Showcase);","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/apartmentShowcase/Showcase.tsx"],"names":["React","Component","connect","actions","asyncActions","Showcase","changePicturePosition","apartmentOfSelectedRoom","indexRoom","clearInterval","props","intervalIdPictureHouseItself","setPositionPictureOfRoom","setPositionOfPicture","setIndexOfSelectedRoom","intervalIdForPicture","lengthOfPictures","rooms","pictures","length","int","setInterval","setIntervalIdForPicture","newPosition","positionOfPicture","render","RenderShowCase","apartmentsArray","map","apartment","indexApartment","indexOfSelectedApartment","room","residue","name","left","a","right","f1","showCaseArr","item","index","result","console","log","undefined","item2","mapStateToProps","state","indexOfSelectedRoom","showcaseStylesAndIndex","isIntervalForPictureWorking","apartments","setApartmentsFromState","setShowCaseOnFocus","setIntervalForPicture","changePositionPictureOfRoom"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { Transition } from 'react-transition-group';\r\nimport { convertCompilerOptionsFromJson } from 'typescript';\r\nimport { actions } from '../actions and const/actions';\r\nimport { asyncActions } from '../actions and const/asyncActions';\r\n\r\nclass Showcase extends Component<any> {\r\n    //TODO сделать setPicPos 0\r\n    changePicturePosition = (apartmentOfSelectedRoom: any, indexRoom: number) => {\r\n        clearInterval(this.props.intervalIdPictureHouseItself);\r\n        this.props.setPositionPictureOfRoom(0);\r\n        this.props.setPositionOfPicture(0);\r\n        this.props.setIndexOfSelectedRoom(0);\r\n\r\n        clearInterval(this.props.intervalIdForPicture);\r\n\r\n        this.props.setIndexOfSelectedRoom(indexRoom);\r\n\r\n        let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\r\n\r\n        const int = setInterval(() => {\r\n            this.props.setIntervalIdForPicture(int);\r\n            let newPosition = this.props.positionOfPicture + 1;\r\n\r\n            if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);\r\n            else this.props.setPositionOfPicture(newPosition);\r\n        }, 5000);\r\n\r\n        this.props.setIntervalIdForPicture(int);\r\n    };\r\n\r\n    render() {\r\n        const RenderShowCase = () => {\r\n            return this.props.apartmentsArray.map((apartment: any, indexApartment: number) => {\r\n                if (indexApartment == this.props.indexOfSelectedApartment) {\r\n                    return apartment.rooms.map((room: any, indexRoom: number) => {\r\n                        let residue = indexRoom % 2;\r\n\r\n                        if (residue == 0) {\r\n                            return (\r\n                                // <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                                //     <div className=\"ForLeftShowcase\">\r\n                                //         <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                //             {room.name}\r\n                                //         </div>\r\n                                //     </div>\r\n                                // </Col>\r\n\r\n                                <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                    {room.name}\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                // <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                                //     <div className=\"ForLeftShowcase\">\r\n                                //         <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                //             {room.name}\r\n                                //         </div>\r\n                                //     </div>\r\n                                // </Col>\r\n\r\n                                <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                    {room.name}\r\n                                </div>\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n\r\n        const left = (a: any) => {\r\n            return <div className=\"red\">{a}</div>;\r\n        };\r\n\r\n        const right = (a: any) => {\r\n            return (\r\n                <div className=\"blue\">\r\n                    <div>{a}</div>\r\n                    <div>blue</div>\r\n                </div>\r\n            );\r\n        };\r\n\r\n        //TODO у нас всегда первое возвращаеться это результат функции\r\n        const f1 = () => {\r\n            let showCaseArr = RenderShowCase();\r\n\r\n            return showCaseArr.map((item: any, index: number) => {\r\n                let result = index % 2;\r\n                console.log(result);\r\n\r\n                if(item != undefined){\r\n                    return item.map((item2:any,index:number) =>{\r\n\r\n                        let result = index % 2\r\n                        if (result == 0) {\r\n                            return left(item);\r\n                        } else {\r\n                            return right(item);\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    }\r\n                    \r\n                    \r\n                    \r\n                    )}\r\n                    ;\r\n                \r\n                // if (result == 0) {\r\n                //     return left(item);\r\n                // } else {\r\n                //     return right(item);\r\n                // }\r\n\r\n\r\n            });\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {/* <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                    <div className=\"ForLeftShowcase\"></div>\r\n                </Col> */}\r\n\r\n                {f1()}\r\n\r\n                \r\n\r\n                {/* \r\n                {RenderShowCase().map((item: any, index: number) => {\r\n                    \r\n                    let result = index % 2;\r\n                    console.log(result);\r\n                    if (result == 0) {\r\n                        return left(item);\r\n                    } else {\r\n                        // return item;\r\n                    }\r\n                })} */}\r\n\r\n                {/* <RenderShowCase /> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateOrAny) => ({\r\n    indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n    isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\r\n    apartmentsArray: state.apartmentsArray.apartments,\r\n    positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\r\n    intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\r\n    intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\r\n    setApartmentsFromState: actions.setApartmentsFromState,\r\n    setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\r\n    setShowCaseOnFocus: actions.setShowCaseOnFocus,\r\n    setIntervalForPicture: actions.setIntervalForPicture,\r\n    setPositionOfPicture: actions.setPositionOfPicture,\r\n    setIntervalIdForPicture: actions.setIntervalIdForPicture,\r\n    changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom,\r\n})(Showcase);\r\n"]},"metadata":{},"sourceType":"module"}