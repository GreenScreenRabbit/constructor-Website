{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport arrowButtonJpg from './Arrow-button.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment];\n  const [positionOfImg, setPositionOfImg] = useState(0);\n  const [recursiveTimeoutId, setRecursiveTimeoutId] = useState();\n  const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState();\n  const [isTimerWork, setTimerWork] = useState(true);\n  let newPosition = positionOfImg; //TODO паралельно он работает изза этого\n\n  useEffect(() => {\n    apartment ? timer(apartment, isTimerWork) : cheackTimer(apartment, isTimerWork);\n  }, [apartment]);\n\n  function cheackTimer(apartment, isTimerWork) {\n    let timerIdCheck = setTimeout(function run(isTimerWork) {\n      setRecursiveCheackTimerId(timerIdCheck);\n      console.log(`timerIdCheck = ${timerIdCheck}`);\n      console.log(`recursiveCheackTimerId = ${recursiveCheackTimerId}`);\n      console.log(\"check\");\n\n      if (apartment) {\n        clearTimeout(timerIdCheck);\n        clearTimeout(recursiveCheackTimerId); //timer(apartment);\n      } else {\n        timerIdCheck = setTimeout(cheackTimer, 5000);\n      }\n    }, 5000);\n    setRecursiveCheackTimerId(timerIdCheck);\n  }\n\n  function timer(apartment, isTimerWork) {\n    //TODO таймер срабатывает 2 раза т.е. он работает еще и паралельно с другим таймером\n    // а еще надо сделать что если фалсе то надо чтобы таймер сам по себе останавливался \n    let timerId = setTimeout(function run() {\n      if (isTimerWork == true) {\n        setRecursiveTimeoutId(timerId);\n        console.log(timerId);\n        ++newPosition;\n\n        if (apartment.whatsOutside.length - 1 < newPosition) {\n          newPosition = 0;\n          setPositionOfImg(() => 0);\n        } else {\n          setPositionOfImg(() => newPosition);\n        }\n\n        timerId = setTimeout(run, 5000);\n      } else {\n        console.log(\"STOP\");\n        clearTimeout(recursiveTimeoutId);\n        clearTimeout(timerId);\n      }\n    }, 5000);\n    console.log(\"mda\");\n    console.log(recursiveTimeoutId);\n    setRecursiveTimeoutId(timerId);\n  } //TODO походу проблема в том что таймер 2 раза запускаеться \n\n\n  const changePositionImgOnClick = isAddOne => {\n    setTimerWork(false);\n\n    const stopRecursiveTimeout = () => {\n      console.log(\"hy\");\n      clearTimeout(recursiveCheackTimerId + 4);\n      clearTimeout(recursiveTimeoutId + 2);\n      clearTimeout(recursiveTimeoutId + 1);\n      console.log(recursiveTimeoutId);\n      console.log(isTimerWork);\n      clearTimeout(recursiveCheackTimerId);\n      clearTimeout(recursiveTimeoutId);\n    };\n\n    stopRecursiveTimeout();\n    console.log(isTimerWork);\n    const imgsLength = apartment.whatsOutside.length;\n    console.log(`recursiveCheackTimerId2 = ${recursiveCheackTimerId}`);\n\n    if (isAddOne == true) {\n      if (positionOfImg >= imgsLength - 1) {\n        console.log(imgsLength - 1);\n        setPositionOfImg(0);\n      } else {\n        setPositionOfImg(positionOfImg + 1);\n      }\n\n      console.log(positionOfImg);\n    } else {\n      if (positionOfImg - 1 < 0) {\n        console.log(\"elseIf\");\n        console.log(imgsLength);\n        setPositionOfImg(imgsLength - 1);\n      } else {\n        setPositionOfImg(positionOfImg - 1);\n      }\n    } //setTimerWork(true)\n    //timer(apartment, isTimerWork)\n\n\n    timer(apartment, false);\n  };\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    let picUrl = imgs[positionOfImg].url;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whatsOutside-image\",\n        src: picUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: [isTimerWork ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"UNOK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => changePositionImgOnClick(false),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), apartment ? renderImg() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              onClick: () => changePositionImgOnClick(true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"wQUY7JiOsWpISGvXdjJaUgSVXrQ=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment\n});\n\nexport default connect(mapStateToProps, null)(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useEffect","useState","Col","Row","connect","arrowButtonJpg","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","positionOfImg","setPositionOfImg","recursiveTimeoutId","setRecursiveTimeoutId","recursiveCheackTimerId","setRecursiveCheackTimerId","isTimerWork","setTimerWork","newPosition","timer","cheackTimer","timerIdCheck","setTimeout","run","console","log","clearTimeout","timerId","whatsOutside","length","changePositionImgOnClick","isAddOne","stopRecursiveTimeout","imgsLength","renderImg","imgs","picUrl","url","offset","span","mapStateToProps","state","apartmentsArray"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport arrowButtonJpg from './Arrow-button.jpg'\r\n\r\nconst WhatsOutside = (props: any) => {\r\n    const apartment = props.apartments[props.indexOfSelectedApartment];\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState(0);\r\n    const [recursiveTimeoutId, setRecursiveTimeoutId] = useState<any>();\r\n    const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState<any>();\r\n    const [isTimerWork, setTimerWork] = useState<boolean>(true);\r\n\r\n    let newPosition = positionOfImg;\r\n\r\n\r\n    //TODO паралельно он работает изза этого\r\n\r\n    useEffect(() => {\r\n        apartment ? timer(apartment, isTimerWork) : cheackTimer(apartment,isTimerWork);\r\n    }, [apartment]);\r\n\r\n\r\n\r\n    function cheackTimer(apartment: any,isTimerWork:boolean) {\r\n        let timerIdCheck = setTimeout(function run(isTimerWork:boolean) {\r\n            setRecursiveCheackTimerId(timerIdCheck);\r\n\r\n            console.log(`timerIdCheck = ${timerIdCheck}`);\r\n            console.log(`recursiveCheackTimerId = ${recursiveCheackTimerId}`);\r\n\r\n\r\n\r\n            console.log(\"check\");\r\n\r\n\r\n\r\n            if (apartment) {\r\n                clearTimeout(timerIdCheck);\r\n                clearTimeout(recursiveCheackTimerId);\r\n                //timer(apartment);\r\n            } else {\r\n                timerIdCheck = setTimeout(cheackTimer, 5000);\r\n            }\r\n        }, 5000);\r\n        setRecursiveCheackTimerId(timerIdCheck);\r\n    }\r\n\r\n\r\n    function timer(apartment: any,isTimerWork:boolean) {\r\n\r\n        //TODO таймер срабатывает 2 раза т.е. он работает еще и паралельно с другим таймером\r\n        // а еще надо сделать что если фалсе то надо чтобы таймер сам по себе останавливался \r\n        let timerId = setTimeout(function run() {\r\n\r\n            if (isTimerWork == true) {\r\n\r\n                setRecursiveTimeoutId(timerId);\r\n\r\n                console.log(timerId);\r\n\r\n\r\n                ++newPosition;\r\n                if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                    newPosition = 0;\r\n                    setPositionOfImg(() => 0);\r\n                } else {\r\n                    setPositionOfImg(() => newPosition);\r\n                }\r\n                timerId = setTimeout(run, 5000);\r\n\r\n            } else {\r\n\r\n                console.log(\"STOP\");\r\n                \r\n                clearTimeout(recursiveTimeoutId)\r\n                clearTimeout(timerId)\r\n            }\r\n\r\n\r\n        }, 5000);\r\n\r\n        console.log(\"mda\");\r\n\r\n        console.log(recursiveTimeoutId);\r\n\r\n        setRecursiveTimeoutId(timerId)\r\n\r\n    }\r\n\r\n\r\n\r\n    //TODO походу проблема в том что таймер 2 раза запускаеться \r\n    const changePositionImgOnClick = (isAddOne: boolean) => {\r\n\r\n        setTimerWork(false)\r\n\r\n\r\n        const stopRecursiveTimeout = () => {\r\n\r\n            console.log(\"hy\");\r\n\r\n\r\n            clearTimeout(recursiveCheackTimerId + 4);\r\n            clearTimeout(recursiveTimeoutId + 2);\r\n            clearTimeout(recursiveTimeoutId + 1);\r\n\r\n            console.log(recursiveTimeoutId);\r\n\r\n            console.log(isTimerWork);\r\n            \r\n\r\n            clearTimeout(recursiveCheackTimerId)\r\n            clearTimeout(recursiveTimeoutId)\r\n        };\r\n        stopRecursiveTimeout();\r\n\r\n\r\n        console.log(isTimerWork);\r\n\r\n        const imgsLength = apartment.whatsOutside.length\r\n\r\n\r\n\r\n        console.log(`recursiveCheackTimerId2 = ${recursiveCheackTimerId}`);\r\n\r\n\r\n\r\n        if (isAddOne == true) {\r\n\r\n            if (positionOfImg >= imgsLength - 1) {\r\n                console.log(imgsLength - 1);\r\n                setPositionOfImg(0)\r\n            } else {\r\n                setPositionOfImg(positionOfImg + 1)\r\n            }\r\n            console.log(positionOfImg);\r\n\r\n        } else {\r\n\r\n\r\n            if (positionOfImg - 1 < 0) {\r\n\r\n                console.log(\"elseIf\");\r\n                console.log(imgsLength);\r\n\r\n\r\n                setPositionOfImg(imgsLength - 1)\r\n            } else {\r\n                setPositionOfImg(positionOfImg - 1)\r\n            }\r\n        }\r\n\r\n\r\n        //setTimerWork(true)\r\n\r\n        //timer(apartment, isTimerWork)\r\n        timer(apartment, false)\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const renderImg = () => {\r\n        const imgs = apartment.whatsOutside;\r\n        let picUrl = imgs[positionOfImg].url;\r\n\r\n        return (\r\n            <>\r\n                <img className=\"whatsOutside-image\" src={picUrl} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n\r\n                        {isTimerWork ? <div>OK</div> : <div>UNOK</div>}\r\n\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\" onClick={() => changePositionImgOnClick(false)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-left\" />\r\n\r\n                            </div>\r\n                            {apartment ? renderImg() : <div>bad</div>}\r\n                            <div className=\"whatsOutside-swipeRight\" onClick={() => changePositionImgOnClick(true)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-right\" />\r\n                                {/* <div className=\"whatsOutside-swipeRight\" onClick={() => setPositionOfImg(positionOfImg + 1)}> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}