{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport arrowButtonJpg from './Arrow-button.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment];\n  const [positionOfImg, setPositionOfImg] = useState(0);\n  const [recursiveTimeoutId, setRecursiveTimeoutId] = useState();\n  const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState();\n  let newPosition = positionOfImg; //TODO паралельно он работает изза этого\n  // useEffect(() => {\n  //     apartment ? timer(apartment) : cheackTimer(apartment);\n  // }, [apartment]);\n\n  function cheackTimer(apartment) {\n    let timerIdCheck = setTimeout(function run() {\n      setRecursiveCheackTimerId(timerIdCheck);\n      console.log(`timerIdCheck = ${timerIdCheck}`);\n      console.log(`recursiveCheackTimerId = ${recursiveCheackTimerId}`);\n      console.log(\"check\"); //TODO timer is stoped\n\n      if (apartment) {\n        clearTimeout(timerIdCheck);\n        clearTimeout(recursiveCheackTimerId); //timer(apartment);\n      } else {\n        timerIdCheck = setTimeout(cheackTimer, 5000);\n      }\n    }, 5000);\n    setRecursiveCheackTimerId(timerIdCheck);\n  }\n\n  function timer(apartment) {\n    //TODO таймер срабатывает 2 раза т.е. он работает еще и паралельно с другим таймером\n    // а еще надо сделать что если фалсе \n    let timerId = setTimeout(function run() {\n      setRecursiveTimeoutId(timerId);\n      console.log(timerId);\n      ++newPosition;\n\n      if (apartment.whatsOutside.length - 1 < newPosition) {\n        newPosition = 0;\n        setPositionOfImg(() => 0);\n      } else {\n        setPositionOfImg(() => newPosition);\n      }\n\n      timerId = setTimeout(run, 5000);\n    }, 5000);\n    console.log(\"mda\");\n    console.log(recursiveTimeoutId);\n    setRecursiveTimeoutId(timerId);\n  }\n\n  const changePositionImgOnClick = isAddOne => {\n    const stopRecursiveTimeout = () => {\n      console.log(\"hy\");\n      clearTimeout(recursiveCheackTimerId + 4);\n      clearTimeout(recursiveTimeoutId + 2);\n      clearTimeout(recursiveTimeoutId + 1);\n      console.log(recursiveTimeoutId);\n      clearTimeout(recursiveCheackTimerId);\n      clearTimeout(recursiveTimeoutId);\n    };\n\n    stopRecursiveTimeout();\n    const imgsLength = apartment.whatsOutside.length;\n    console.log(`recursiveCheackTimerId2 = ${recursiveCheackTimerId}`);\n\n    if (isAddOne == true) {\n      if (positionOfImg >= imgsLength - 1) {\n        console.log(imgsLength - 1);\n        setPositionOfImg(0);\n      } else {\n        setPositionOfImg(positionOfImg + 1);\n      }\n\n      console.log(positionOfImg);\n    } else {\n      if (positionOfImg - 1 < 0) {\n        console.log(\"elseIf\");\n        console.log(imgsLength);\n        setPositionOfImg(imgsLength - 1);\n      } else {\n        setPositionOfImg(positionOfImg - 1);\n      }\n    }\n\n    timer(apartment); // if (positionOfImg >= imgsLength - 1) {\n    //     console.log(imgsLength - 1);\n    //     setPositionOfImg(0)\n    // } \n    // else if (positionOfImg - 1 < 0) {\n    //     console.log(\"elseIf\"); \n    //     console.log(imgsLength);\n    //     setPositionOfImg(imgsLength - 1)\n    // }\n    // else {\n    //     console.log(\"else\");\n    //     if (isAddOne == true) {\n    //         console.log(positionOfImg);\n    //         setPositionOfImg(positionOfImg + 1)\n    //     } else {\n    //         setPositionOfImg(positionOfImg - 1)\n    //     }\n    // }\n\n    console.log(positionOfImg);\n  };\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    let picUrl = imgs[positionOfImg].url;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whatsOutside-image\",\n        src: picUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => changePositionImgOnClick(false),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), apartment ? renderImg() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              onClick: () => changePositionImgOnClick(true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: arrowButtonJpg,\n                className: \"whatsOutside-arrowButtonJpg-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"Kj/DMxs3qI9fGwoHsGjcc5q/jYA=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment\n});\n\nexport default connect(mapStateToProps, null)(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useState","Col","Row","connect","arrowButtonJpg","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","positionOfImg","setPositionOfImg","recursiveTimeoutId","setRecursiveTimeoutId","recursiveCheackTimerId","setRecursiveCheackTimerId","newPosition","cheackTimer","timerIdCheck","setTimeout","run","console","log","clearTimeout","timer","timerId","whatsOutside","length","changePositionImgOnClick","isAddOne","stopRecursiveTimeout","imgsLength","renderImg","imgs","picUrl","url","offset","span","mapStateToProps","state","apartmentsArray"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport arrowButtonJpg from './Arrow-button.jpg'\r\n\r\nconst WhatsOutside = (props: any) => {\r\n    const apartment = props.apartments[props.indexOfSelectedApartment];\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState(0);\r\n    const [recursiveTimeoutId, setRecursiveTimeoutId] = useState<any>();\r\n    const [recursiveCheackTimerId, setRecursiveCheackTimerId] = useState<any>();\r\n\r\n    let newPosition = positionOfImg;\r\n\r\n\r\n    //TODO паралельно он работает изза этого\r\n\r\n    // useEffect(() => {\r\n    //     apartment ? timer(apartment) : cheackTimer(apartment);\r\n    // }, [apartment]);\r\n\r\n    function cheackTimer(apartment: any) {\r\n        let timerIdCheck = setTimeout(function run() {\r\n            setRecursiveCheackTimerId(timerIdCheck);\r\n\r\n            console.log(`timerIdCheck = ${timerIdCheck}`);\r\n            console.log(`recursiveCheackTimerId = ${recursiveCheackTimerId}`);\r\n            \r\n            \r\n\r\n            console.log(\"check\");\r\n\r\n\r\n            //TODO timer is stoped\r\n            if (apartment) {\r\n                clearTimeout(timerIdCheck);\r\n                clearTimeout(recursiveCheackTimerId);\r\n                //timer(apartment);\r\n            } else {\r\n                timerIdCheck = setTimeout(cheackTimer, 5000);\r\n            }\r\n        }, 5000);\r\n        setRecursiveCheackTimerId(timerIdCheck);\r\n    }\r\n\r\n\r\n    function timer(apartment: any) {\r\n\r\n        //TODO таймер срабатывает 2 раза т.е. он работает еще и паралельно с другим таймером\r\n        // а еще надо сделать что если фалсе \r\n        let timerId = setTimeout(function run() {\r\n\r\n            setRecursiveTimeoutId(timerId);\r\n\r\n            console.log(timerId);\r\n\r\n\r\n            ++newPosition;\r\n            if (apartment.whatsOutside.length - 1 < newPosition) {\r\n                newPosition = 0;\r\n                setPositionOfImg(() => 0);\r\n            } else {\r\n                setPositionOfImg(() => newPosition);\r\n            }\r\n            timerId = setTimeout(run, 5000);\r\n\r\n        }, 5000);\r\n\r\n        console.log(\"mda\");\r\n\r\n        console.log(recursiveTimeoutId);\r\n\r\n        setRecursiveTimeoutId(timerId)\r\n\r\n    }\r\n\r\n\r\nconst changePositionImgOnClick = (isAddOne: boolean) => {\r\n        const stopRecursiveTimeout = () => {\r\n\r\n            console.log(\"hy\");\r\n\r\n\r\n            clearTimeout(recursiveCheackTimerId + 4);\r\n            clearTimeout(recursiveTimeoutId + 2);\r\n            clearTimeout(recursiveTimeoutId + 1);\r\n            \r\n            console.log(recursiveTimeoutId);\r\n            \r\n\r\n            clearTimeout(recursiveCheackTimerId)\r\n            clearTimeout(recursiveTimeoutId)\r\n        };\r\n        stopRecursiveTimeout();\r\n\r\n        const imgsLength = apartment.whatsOutside.length\r\n\r\n\r\n\r\n        console.log(`recursiveCheackTimerId2 = ${recursiveCheackTimerId}`);\r\n\r\n\r\n\r\n        if (isAddOne == true) {\r\n\r\n            if (positionOfImg >= imgsLength - 1) {\r\n                console.log(imgsLength - 1);\r\n                setPositionOfImg(0)\r\n            } else {\r\n                setPositionOfImg(positionOfImg + 1)\r\n            }\r\n            console.log(positionOfImg);\r\n\r\n        } else {\r\n\r\n\r\n            if (positionOfImg - 1 < 0) {\r\n\r\n                console.log(\"elseIf\");\r\n                console.log(imgsLength);\r\n\r\n\r\n                setPositionOfImg(imgsLength - 1)\r\n            } else {\r\n                setPositionOfImg(positionOfImg - 1)\r\n            }\r\n        }\r\n\r\n\r\n        timer(apartment)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // if (positionOfImg >= imgsLength - 1) {\r\n\r\n\r\n        //     console.log(imgsLength - 1);\r\n\r\n\r\n        //     setPositionOfImg(0)\r\n        // } \r\n\r\n        // else if (positionOfImg - 1 < 0) {\r\n\r\n        //     console.log(\"elseIf\"); \r\n        //     console.log(imgsLength);\r\n\r\n\r\n        //     setPositionOfImg(imgsLength - 1)\r\n        // }\r\n\r\n\r\n        // else {\r\n\r\n        //     console.log(\"else\");\r\n\r\n\r\n        //     if (isAddOne == true) {\r\n        //         console.log(positionOfImg);\r\n\r\n        //         setPositionOfImg(positionOfImg + 1)\r\n        //     } else {\r\n        //         setPositionOfImg(positionOfImg - 1)\r\n        //     }\r\n\r\n\r\n        // }\r\n\r\n        console.log(positionOfImg);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const renderImg = () => {\r\n        const imgs = apartment.whatsOutside;\r\n        let picUrl = imgs[positionOfImg].url;\r\n\r\n        return (\r\n            <>\r\n                <img className=\"whatsOutside-image\" src={picUrl} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\" onClick={() => changePositionImgOnClick(false)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-left\" />\r\n\r\n                            </div>\r\n                            {apartment ? renderImg() : <div>bad</div>}\r\n                            <div className=\"whatsOutside-swipeRight\" onClick={() => changePositionImgOnClick(true)}>\r\n                                <img src={arrowButtonJpg} className=\"whatsOutside-arrowButtonJpg-right\" />\r\n                                {/* <div className=\"whatsOutside-swipeRight\" onClick={() => setPositionOfImg(positionOfImg + 1)}> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}