{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\whatsOutside\\\\WhatsOutside.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WhatsOutside = props => {\n  _s();\n\n  const apartment = props.apartments[props.indexOfSelectedApartment]; //TODO так при papartment true надо только тогда запускать скрипт\n\n  apartment ? timer() : console.log('net');\n\n  function timer() {\n    setTimeout(function run() {\n      console.log('timer');\n\n      if (apartment.whatsOutside.length < newPosition) {\n        console.log('if');\n        setPositionOfImg(() => 0);\n      } else {\n        console.log('else');\n        setPositionOfImg(() => newPosition);\n      }\n\n      setTimeout(run, 5000);\n    }, 5000);\n  }\n\n  function startKek() {\n    if (apartment) {\n      intChangePositionOfImg();\n    } else {\n      f2();\n    }\n  }\n\n  const f2 = () => {\n    console.log('f2');\n    console.log(apartment);\n    setTimeout(() => apartment ? intChangePositionOfImg() : f2(), 5000);\n  };\n\n  const takeApr = apartment => {\n    return apartment;\n  };\n\n  const [positionOfImg, setPositionOfImg] = useState(0);\n  const [intervalId, setIntervalId] = useState(); //TODO просто поставить лимит и при нажатии next или prev выключать интервал\n\n  console.log('render f');\n  let newPosition = positionOfImg;\n\n  const changePositionImgOnClick = () => {\n    const stopInterval = () => {\n      console.log(`intervalId = ${intervalId}`);\n      clearInterval(intervalId);\n    };\n\n    stopInterval();\n  }; // TODO где-то тут функция вызиваеться триллион раз\n  // фуннкция вызиваеться сначало 1 раз потом 2 , 4 , 8 и тд\n\n\n  function intChangePositionOfImg() {\n    console.log(apartment);\n\n    if (apartment != undefined) {\n      let int = setTimeout(function tick() {\n        function kek2(apartment) {\n          console.log('stil work');\n          ++newPosition;\n          console.log(positionOfImg);\n          setIntervalId(int);\n\n          if (apartment) {\n            console.log(apartment.whatsOutside.length);\n            console.log(newPosition);\n\n            if (apartment.whatsOutside.length < newPosition) {\n              console.log('if');\n              setPositionOfImg(() => 0);\n            } else {\n              console.log('else');\n              setPositionOfImg(() => newPosition);\n            }\n          } else {\n            console.log(apartment);\n          }\n        }\n\n        kek2(apartment);\n        int = setTimeout(tick, 2000);\n      }, 2000);\n    } //return () => clearInterval(int)\n\n  }\n\n  useEffect(() => {\n    startKek();\n  }, []); //TODO а тут создать вещь что будет постояно отправлять таймаут\n\n  const checkWhole = () => {//TODO сдлеать таймаут который будет регулярно провирять апартмент\n  };\n\n  const renderImg = () => {\n    const imgs = apartment.whatsOutside;\n    let picUrl = imgs[0].url;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"whatsOutside-image\",\n        src: picUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          offset: 1,\n          span: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whatsOutside-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whatsOutside-showcase\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeLeft\",\n              onClick: () => changePositionImgOnClick(),\n              children: [positionOfImg, '<<<<<<<']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), apartment ? renderImg() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"bad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whatsOutside-swipeRight\",\n              onClick: () => setPositionOfImg(positionOfImg + 1),\n              children: [\"right\", '>>>>>']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WhatsOutside, \"oGnxXK6IHRrzUqX2BFISAgPG8nQ=\");\n\n_c = WhatsOutside;\n\nconst mapStateToProps = state => ({\n  apartments: state.apartmentsArray.apartments,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment\n});\n\nexport default connect(mapStateToProps, null)(WhatsOutside);\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatsOutside\");","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/whatsOutside/WhatsOutside.tsx"],"names":["useEffect","useState","Col","Row","connect","WhatsOutside","props","apartment","apartments","indexOfSelectedApartment","timer","console","log","setTimeout","run","whatsOutside","length","newPosition","setPositionOfImg","startKek","intChangePositionOfImg","f2","takeApr","positionOfImg","intervalId","setIntervalId","changePositionImgOnClick","stopInterval","clearInterval","undefined","int","tick","kek2","checkWhole","renderImg","imgs","picUrl","url","offset","span","mapStateToProps","state","apartmentsArray"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\n\r\nconst WhatsOutside = (props: any) => {\r\n    const apartment = props.apartments[props.indexOfSelectedApartment];\r\n\r\n    //TODO так при papartment true надо только тогда запускать скрипт\r\n\r\n    apartment ? timer() : console.log('net');\r\n\r\n    function timer() {\r\n        setTimeout(function run() {\r\n            console.log('timer');\r\n            \r\n            if (apartment.whatsOutside.length < newPosition) {\r\n                console.log('if');\r\n                setPositionOfImg(() => 0);\r\n            } else {\r\n                console.log('else');\r\n\r\n                setPositionOfImg(() => newPosition);\r\n            }\r\n            setTimeout(run, 5000);\r\n        }, 5000);\r\n    }\r\n\r\n    function startKek() {\r\n        if (apartment) {\r\n            intChangePositionOfImg();\r\n        } else {\r\n            f2();\r\n        }\r\n    }\r\n\r\n    const f2 = () => {\r\n        console.log('f2');\r\n        console.log(apartment);\r\n\r\n        setTimeout(() => (apartment ? intChangePositionOfImg() : f2()), 5000);\r\n    };\r\n\r\n    const takeApr = (apartment: any) => {\r\n        return apartment;\r\n    };\r\n\r\n    const [positionOfImg, setPositionOfImg] = useState(0);\r\n    const [intervalId, setIntervalId] = useState<NodeJS.Timeout>();\r\n\r\n    //TODO просто поставить лимит и при нажатии next или prev выключать интервал\r\n    console.log('render f');\r\n\r\n    let newPosition = positionOfImg;\r\n\r\n    const changePositionImgOnClick = () => {\r\n        const stopInterval = () => {\r\n            console.log(`intervalId = ${intervalId}`);\r\n            clearInterval(intervalId!);\r\n        };\r\n        stopInterval();\r\n    };\r\n\r\n    // TODO где-то тут функция вызиваеться триллион раз\r\n    // фуннкция вызиваеться сначало 1 раз потом 2 , 4 , 8 и тд\r\n    function intChangePositionOfImg() {\r\n        console.log(apartment);\r\n        if (apartment != undefined) {\r\n            let int = setTimeout(function tick() {\r\n                function kek2(apartment: any) {\r\n                    console.log('stil work');\r\n\r\n                    ++newPosition;\r\n                    console.log(positionOfImg);\r\n\r\n                    setIntervalId(int);\r\n\r\n                    if (apartment) {\r\n                        console.log(apartment.whatsOutside.length);\r\n\r\n                        console.log(newPosition);\r\n\r\n                        if (apartment.whatsOutside.length < newPosition) {\r\n                            console.log('if');\r\n                            setPositionOfImg(() => 0);\r\n                        } else {\r\n                            console.log('else');\r\n\r\n                            setPositionOfImg(() => newPosition);\r\n                        }\r\n                    } else {\r\n                        console.log(apartment);\r\n                    }\r\n                }\r\n                kek2(apartment);\r\n\r\n                int = setTimeout(tick, 2000);\r\n            }, 2000);\r\n        }\r\n\r\n        //return () => clearInterval(int)\r\n    }\r\n\r\n    useEffect(() => {\r\n        startKek();\r\n    }, []);\r\n\r\n    //TODO а тут создать вещь что будет постояно отправлять таймаут\r\n\r\n    const checkWhole = () => {\r\n        //TODO сдлеать таймаут который будет регулярно провирять апартмент\r\n    };\r\n\r\n    const renderImg = () => {\r\n        const imgs = apartment.whatsOutside;\r\n        let picUrl = imgs[0].url;\r\n\r\n        return (\r\n            <>\r\n                <img className=\"whatsOutside-image\" src={picUrl} />\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={{ offset: 1, span: 10 }}>\r\n                    <div className=\"whatsOutside-body\">\r\n                        <div className=\"whatsOutside-showcase\">\r\n                            <div className=\"whatsOutside-swipeLeft\" onClick={() => changePositionImgOnClick()}>\r\n                                {positionOfImg}\r\n\r\n                                {'<<<<<<<'}\r\n                            </div>\r\n                            {apartment ? renderImg() : <div>bad</div>}\r\n                            <div className=\"whatsOutside-swipeRight\" onClick={() => setPositionOfImg(positionOfImg + 1)}>\r\n                                right{'>>>>>'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    apartments: state.apartmentsArray.apartments,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WhatsOutside);\r\n"]},"metadata":{},"sourceType":"module"}