{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vitya\\\\constructor-comp-www\\\\src\\\\apartmentShowcase\\\\Showcase.tsx\";\nimport { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { actions } from '../actions and const/actions';\nimport { asyncActions } from '../actions and const/asyncActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Showcase extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePicturePosition = (apartmentOfSelectedRoom, indexRoom) => {\n      clearInterval(this.props.intervalIdPictureHouseItself);\n      this.props.setPositionPictureOfRoom(0);\n      this.props.setPositionOfPicture(0);\n      this.props.setIndexOfSelectedRoom(0);\n      clearInterval(this.props.intervalIdForPicture);\n      this.props.setIndexOfSelectedRoom(indexRoom);\n      let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\n      const int = setInterval(() => {\n        this.props.setIntervalIdForPicture(int);\n        let newPosition = this.props.positionOfPicture + 1;\n        if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);else this.props.setPositionOfPicture(newPosition);\n      }, 5000);\n      this.props.setIntervalIdForPicture(int);\n    };\n  }\n\n  render() {\n    const RenderShowCase = () => {\n      const showcaseJSXarr = [];\n      this.props.apartmentsArray.map((apartment, indexApartment) => {\n        if (indexApartment == this.props.indexOfSelectedApartment) {\n          return apartment.rooms.map((room, indexRoom) => {\n            let residue = indexRoom % 2;\n\n            if (residue == 0) {\n              showcaseJSXarr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"apartmentShowcase-selectRoom\",\n                onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                children: room.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this));\n            } else {\n              showcaseJSXarr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"apartmentShowcase-selectRoom-alt\",\n                onMouseEnter: () => this.changePicturePosition(apartment, indexRoom),\n                children: room.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this));\n            }\n          });\n        }\n      });\n      return showcaseJSXarr;\n    };\n\n    const RenderAll = () => {\n      let showcaseArr = RenderShowCase();\n      const sortedShowcaseArr = [];\n      let showcaseLeftArr = [];\n      let showcaseRightArr = [];\n      showcaseArr.map((showCase, index) => {\n        let result = index % 2;\n\n        if (result == 0) {\n          showcaseLeftArr.push(showCase);\n          return /*#__PURE__*/_jsxDEV(Col, {\n            lg: {\n              span: 2,\n              offset: 0,\n              order: 1\n            },\n            className: \"colWithoutPadding\",\n            children: showcaseLeftArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this);\n        } else {\n          showcaseRightArr.push(showCase);\n          return /*#__PURE__*/_jsxDEV(Col, {\n            lg: {\n              span: 2,\n              offset: 0,\n              order: 1\n            },\n            className: \"colWithoutPadding\",\n            children: showcaseRightArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this);\n        }\n      });\n      sortedShowcaseArr.push(showcaseLeftArr, showcaseRightArr);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            span: 2,\n            offset: 0,\n            order: 3\n          },\n          className: \"colWithoutPadding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ForRightShowcase\",\n            children: showcaseRightArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            span: 2,\n            offset: 0,\n            order: 1\n          },\n          md: {\n            span: 2,\n            offset: 0,\n            order: 1\n          },\n          sm: {\n            span: 2,\n            offset: 0,\n            order: 1\n          },\n          className: \"colWithoutPadding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ForLeftShowcase\",\n            children: showcaseLeftArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: RenderAll()\n    }, void 0, false);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\n  indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\n  isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\n  apartmentsArray: state.apartmentsArray.apartments,\n  positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\n  intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\n  intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself\n});\n\nexport default connect(mapStateToProps, {\n  setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\n  setApartmentsFromState: actions.setApartmentsFromState,\n  setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\n  setShowCaseOnFocus: actions.setShowCaseOnFocus,\n  setIntervalForPicture: actions.setIntervalForPicture,\n  setPositionOfPicture: actions.setPositionOfPicture,\n  setIntervalIdForPicture: actions.setIntervalIdForPicture,\n  changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom\n})(Showcase);","map":{"version":3,"sources":["C:/Users/Vitya/constructor-comp-www/src/apartmentShowcase/Showcase.tsx"],"names":["Component","Col","connect","actions","asyncActions","Showcase","changePicturePosition","apartmentOfSelectedRoom","indexRoom","clearInterval","props","intervalIdPictureHouseItself","setPositionPictureOfRoom","setPositionOfPicture","setIndexOfSelectedRoom","intervalIdForPicture","lengthOfPictures","rooms","pictures","length","int","setInterval","setIntervalIdForPicture","newPosition","positionOfPicture","render","RenderShowCase","showcaseJSXarr","apartmentsArray","map","apartment","indexApartment","indexOfSelectedApartment","room","residue","push","name","RenderAll","showcaseArr","sortedShowcaseArr","showcaseLeftArr","showcaseRightArr","showCase","index","result","span","offset","order","mapStateToProps","state","indexOfSelectedRoom","showcaseStylesAndIndex","isIntervalForPictureWorking","apartments","setApartmentsFromState","setShowCaseOnFocus","setIntervalForPicture","changePositionPictureOfRoom"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { actions } from '../actions and const/actions';\r\nimport { asyncActions } from '../actions and const/asyncActions';\r\nimport { apartmentType } from '../apartmentsType/apartmentsType';\r\n\r\nclass Showcase extends Component<any> {\r\n    changePicturePosition = (apartmentOfSelectedRoom: apartmentType, indexRoom: number) => {\r\n\r\n\r\n        \r\n        clearInterval(this.props.intervalIdPictureHouseItself);\r\n        this.props.setPositionPictureOfRoom(0);\r\n        this.props.setPositionOfPicture(0);\r\n        this.props.setIndexOfSelectedRoom(0);\r\n\r\n        clearInterval(this.props.intervalIdForPicture);\r\n\r\n        this.props.setIndexOfSelectedRoom(indexRoom);\r\n\r\n        let lengthOfPictures = apartmentOfSelectedRoom.rooms[indexRoom].pictures.length;\r\n\r\n        const int = setInterval(() => {\r\n            this.props.setIntervalIdForPicture(int);\r\n            let newPosition = this.props.positionOfPicture + 1;\r\n\r\n            if (lengthOfPictures - 1 < newPosition) this.props.setPositionOfPicture(0);\r\n            else this.props.setPositionOfPicture(newPosition);\r\n        }, 5000);\r\n\r\n        this.props.setIntervalIdForPicture(int);\r\n    };\r\n\r\n    render() {\r\n        const RenderShowCase = () => {\r\n            const showcaseJSXarr: any = [];\r\n\r\n            this.props.apartmentsArray.map((apartment: any, indexApartment: number) => {\r\n                if (indexApartment == this.props.indexOfSelectedApartment) {\r\n                    return apartment.rooms.map((room: any, indexRoom: number) => {\r\n                        let residue = indexRoom % 2;\r\n\r\n                        if (residue == 0) {\r\n                            showcaseJSXarr.push(\r\n                                <div className=\"apartmentShowcase-selectRoom\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                    {room.name}\r\n                                </div>,\r\n                            );\r\n                        } else {\r\n                            showcaseJSXarr.push(\r\n                                <div className=\"apartmentShowcase-selectRoom-alt\" onMouseEnter={() => this.changePicturePosition(apartment, indexRoom)}>\r\n                                    {room.name}\r\n                                </div>,\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            return showcaseJSXarr;\r\n        };\r\n\r\n        const RenderAll = () => {\r\n            let showcaseArr = RenderShowCase();\r\n\r\n            const sortedShowcaseArr: any = [];\r\n\r\n            let showcaseLeftArr: any[] = [];\r\n            let showcaseRightArr: any[] = [];\r\n\r\n            showcaseArr.map((showCase: any, index: number) => {\r\n                let result = index % 2;\r\n                if (result == 0) {\r\n                    showcaseLeftArr.push(showCase);\r\n\r\n                    return (\r\n                        <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                            {showcaseLeftArr}\r\n                        </Col>\r\n                    );\r\n                } else {\r\n                    showcaseRightArr.push(showCase);\r\n\r\n                    return (\r\n                        <Col lg={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                            {showcaseRightArr}\r\n                        </Col>\r\n                    );\r\n                }\r\n\r\n            });\r\n\r\n            sortedShowcaseArr.push(showcaseLeftArr, showcaseRightArr);\r\n\r\n            return (\r\n                <>\r\n                    <Col lg={{ span: 2, offset: 0, order: 3 }} className=\"colWithoutPadding\">\r\n                        <div className=\"ForRightShowcase\">{showcaseRightArr}</div>\r\n                    </Col>\r\n                    <Col lg={{ span: 2, offset: 0, order: 1 }} md={{ span: 2, offset: 0, order: 1 }} sm={{ span: 2, offset: 0, order: 1 }} className=\"colWithoutPadding\">\r\n                        <div className=\"ForLeftShowcase\">{showcaseLeftArr}</div>\r\n                    </Col>\r\n                </>\r\n            );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        };\r\n\r\n        return (\r\n            <>\r\n\r\n                {RenderAll()}\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateOrAny) => ({\r\n    indexOfSelectedRoom: state.showcaseStylesAndIndex.indexOfSelectedRoom,\r\n    indexOfSelectedApartment: state.apartmentsArray.indexOfSelectedApartment,\r\n    isIntervalForPictureWorking: state.showcaseStylesAndIndex.isIntervalForPictureWorking,\r\n    apartmentsArray: state.apartmentsArray.apartments,\r\n    positionOfPicture: state.showcaseStylesAndIndex.positionOfPicture,\r\n    intervalIdForPicture: state.showcaseStylesAndIndex.intervalIdForPicture,\r\n    intervalIdPictureHouseItself: state.showcaseStylesAndIndex.intervalIdPictureHouseItself,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setPositionPictureOfRoom: actions.setPositionPictureOfRoom,\r\n    setApartmentsFromState: actions.setApartmentsFromState,\r\n    setIndexOfSelectedRoom: actions.setIndexOfSelectedRoom,\r\n    setShowCaseOnFocus: actions.setShowCaseOnFocus,\r\n    setIntervalForPicture: actions.setIntervalForPicture,\r\n    setPositionOfPicture: actions.setPositionOfPicture,\r\n    setIntervalIdForPicture: actions.setIntervalIdForPicture,\r\n    changePositionPictureOfRoom: asyncActions.changePositionPictureOfRoom,\r\n})(Showcase);\r\n"]},"metadata":{},"sourceType":"module"}